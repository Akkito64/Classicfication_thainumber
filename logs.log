2023-06-09 11:23:22,331:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-09 11:23:22,331:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-09 11:23:22,331:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-09 11:23:22,331:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-09 11:23:23,667:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-09 11:23:40,223:INFO:PyCaret ClassificationExperiment
2023-06-09 11:23:40,224:INFO:Logging name: clf-default-name
2023-06-09 11:23:40,224:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-09 11:23:40,224:INFO:version 3.0.2
2023-06-09 11:23:40,224:INFO:Initializing setup()
2023-06-09 11:23:40,224:INFO:self.USI: 4faf
2023-06-09 11:23:40,224:INFO:self._variable_keys: {'fold_groups_param', 'exp_id', 'memory', 'n_jobs_param', 'fold_generator', 'X', 'seed', 'idx', 'html_param', 'logging_param', '_available_plots', 'log_plots_param', 'pipeline', 'X_test', 'USI', 'data', 'y', 'exp_name_log', 'gpu_param', 'fold_shuffle_param', 'fix_imbalance', 'target_param', 'y_test', 'is_multiclass', 'gpu_n_jobs_param', '_ml_usecase', 'y_train', 'X_train'}
2023-06-09 11:23:40,224:INFO:Checking environment
2023-06-09 11:23:40,224:INFO:python_version: 3.10.11
2023-06-09 11:23:40,224:INFO:python_build: ('main', 'May 10 2023 18:51:25')
2023-06-09 11:23:40,224:INFO:machine: AMD64
2023-06-09 11:23:40,224:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-09 11:23:40,224:INFO:Memory: svmem(total=34301440000, available=24984780800, percent=27.2, used=9316659200, free=24984780800)
2023-06-09 11:23:40,224:INFO:Physical Core: 8
2023-06-09 11:23:40,224:INFO:Logical Core: 16
2023-06-09 11:23:40,224:INFO:Checking libraries
2023-06-09 11:23:40,224:INFO:System:
2023-06-09 11:23:40,224:INFO:    python: 3.10.11 | packaged by conda-forge | (main, May 10 2023, 18:51:25) [MSC v.1934 64 bit (AMD64)]
2023-06-09 11:23:40,224:INFO:executable: c:\Users\User\Downloads\solution\.conda\python.exe
2023-06-09 11:23:40,224:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-09 11:23:40,225:INFO:PyCaret required dependencies:
2023-06-09 11:23:40,225:INFO:                 pip: 23.1.2
2023-06-09 11:23:40,225:INFO:          setuptools: 67.7.2
2023-06-09 11:23:40,225:INFO:             pycaret: 3.0.2
2023-06-09 11:23:40,225:INFO:             IPython: 8.5.0
2023-06-09 11:23:40,225:INFO:          ipywidgets: 8.0.6
2023-06-09 11:23:40,225:INFO:                tqdm: 4.65.0
2023-06-09 11:23:40,225:INFO:               numpy: 1.23.3
2023-06-09 11:23:40,225:INFO:              pandas: 1.4.4
2023-06-09 11:23:40,225:INFO:              jinja2: 3.1.2
2023-06-09 11:23:40,225:INFO:               scipy: 1.9.3
2023-06-09 11:23:40,225:INFO:              joblib: 1.2.0
2023-06-09 11:23:40,225:INFO:             sklearn: 1.1.3
2023-06-09 11:23:40,225:INFO:                pyod: 1.0.9
2023-06-09 11:23:40,225:INFO:            imblearn: 0.10.1
2023-06-09 11:23:40,225:INFO:   category_encoders: 2.6.1
2023-06-09 11:23:40,225:INFO:            lightgbm: 3.3.5
2023-06-09 11:23:40,225:INFO:               numba: 0.57.0
2023-06-09 11:23:40,225:INFO:            requests: 2.31.0
2023-06-09 11:23:40,225:INFO:          matplotlib: 3.6.2
2023-06-09 11:23:40,225:INFO:          scikitplot: 0.3.7
2023-06-09 11:23:40,225:INFO:         yellowbrick: 1.5
2023-06-09 11:23:40,225:INFO:              plotly: 5.13.1
2023-06-09 11:23:40,226:INFO:             kaleido: 0.2.1
2023-06-09 11:23:40,226:INFO:         statsmodels: 0.13.5
2023-06-09 11:23:40,226:INFO:              sktime: 0.17.0
2023-06-09 11:23:40,226:INFO:               tbats: 1.1.3
2023-06-09 11:23:40,226:INFO:            pmdarima: 2.0.3
2023-06-09 11:23:40,226:INFO:              psutil: 5.9.3
2023-06-09 11:23:40,226:INFO:PyCaret optional dependencies:
2023-06-09 11:23:40,241:INFO:                shap: Not installed
2023-06-09 11:23:40,241:INFO:           interpret: Not installed
2023-06-09 11:23:40,241:INFO:                umap: Not installed
2023-06-09 11:23:40,241:INFO:    pandas_profiling: Not installed
2023-06-09 11:23:40,241:INFO:  explainerdashboard: Not installed
2023-06-09 11:23:40,241:INFO:             autoviz: Not installed
2023-06-09 11:23:40,241:INFO:           fairlearn: Not installed
2023-06-09 11:23:40,241:INFO:             xgboost: Not installed
2023-06-09 11:23:40,242:INFO:            catboost: Not installed
2023-06-09 11:23:40,242:INFO:              kmodes: Not installed
2023-06-09 11:23:40,242:INFO:             mlxtend: Not installed
2023-06-09 11:23:40,242:INFO:       statsforecast: Not installed
2023-06-09 11:23:40,242:INFO:        tune_sklearn: Not installed
2023-06-09 11:23:40,242:INFO:                 ray: Not installed
2023-06-09 11:23:40,242:INFO:            hyperopt: Not installed
2023-06-09 11:23:40,242:INFO:              optuna: Not installed
2023-06-09 11:23:40,242:INFO:               skopt: Not installed
2023-06-09 11:23:40,242:INFO:              mlflow: Not installed
2023-06-09 11:23:40,242:INFO:              gradio: Not installed
2023-06-09 11:23:40,242:INFO:             fastapi: Not installed
2023-06-09 11:23:40,242:INFO:             uvicorn: Not installed
2023-06-09 11:23:40,242:INFO:              m2cgen: Not installed
2023-06-09 11:23:40,242:INFO:           evidently: Not installed
2023-06-09 11:23:40,242:INFO:               fugue: Not installed
2023-06-09 11:23:40,242:INFO:           streamlit: Not installed
2023-06-09 11:23:40,242:INFO:             prophet: Not installed
2023-06-09 11:23:40,242:INFO:None
2023-06-09 11:23:40,242:INFO:Set up data.
2023-06-09 11:23:40,246:INFO:Set up train/test split.
2023-06-09 11:23:40,250:INFO:Set up index.
2023-06-09 11:23:40,250:INFO:Set up folding strategy.
2023-06-09 11:23:40,250:INFO:Assigning column types.
2023-06-09 11:23:40,253:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-09 11:23:40,300:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-09 11:23:40,303:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-09 11:23:40,340:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-09 11:23:40,383:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-09 11:23:40,432:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-09 11:23:40,433:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-09 11:23:40,463:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-09 11:23:40,463:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-09 11:23:40,463:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-09 11:23:40,511:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-09 11:23:40,542:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-09 11:23:40,543:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-09 11:23:40,591:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-09 11:23:40,621:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-09 11:23:40,621:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-09 11:23:40,622:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-09 11:23:40,700:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-09 11:23:40,700:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-09 11:23:40,779:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-09 11:23:40,779:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-09 11:23:40,780:INFO:Preparing preprocessing pipeline...
2023-06-09 11:23:40,782:INFO:Set up label encoding.
2023-06-09 11:23:40,782:INFO:Set up simple imputation.
2023-06-09 11:23:40,783:INFO:Set up encoding of categorical features.
2023-06-09 11:23:40,846:INFO:Finished creating preprocessing pipeline.
2023-06-09 11:23:40,853:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\User\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['encode_label'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_value...
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['img'],
                                    transformer=TargetEncoder(cols=['img'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-06-09 11:23:40,853:INFO:Creating final display dataframe.
2023-06-09 11:23:41,033:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9          Categorical features   
10                   Preprocess   
11              Imputation type   
12           Numeric imputation   
13       Categorical imputation   
14     Maximum one-hot encoding   
15              Encoding method   
16               Fold Generator   
17                  Fold Number   
18                     CPU Jobs   
19                      Use GPU   
20               Log Experiment   
21              Experiment Name   
22                          USI   

                                                Value  
0                                                 123  
1                                               label  
2                                          Multiclass  
3   0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7...  
4                                            (300, 3)  
5                                            (300, 3)  
6                                            (210, 3)  
7                                             (90, 3)  
8                                                   1  
9                                                   1  
10                                               True  
11                                             simple  
12                                               mean  
13                                               mode  
14                                                 25  
15                                               None  
16                                    StratifiedKFold  
17                                                 10  
18                                                 -1  
19                                              False  
20                                              False  
21                                   clf-default-name  
22                                               4faf  
2023-06-09 11:23:41,122:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-09 11:23:41,122:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-09 11:23:41,201:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-09 11:23:41,202:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-09 11:23:41,202:INFO:setup() successfully completed in 1.2s...............
2023-06-09 11:23:51,260:INFO:Initializing compare_models()
2023-06-09 11:23:51,260:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A386EA560>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000022A386EA560>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-09 11:23:51,260:INFO:Checking exceptions
2023-06-09 11:23:51,264:INFO:Preparing display monitor
2023-06-09 11:23:51,312:INFO:Initializing Logistic Regression
2023-06-09 11:23:51,312:INFO:Total runtime is 0.0 minutes
2023-06-09 11:23:51,317:INFO:SubProcess create_model() called ==================================
2023-06-09 11:23:51,318:INFO:Initializing create_model()
2023-06-09 11:23:51,318:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A386EA560>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A79709180>, model_only=True, return_train_score=False, kwargs={})
2023-06-09 11:23:51,318:INFO:Checking exceptions
2023-06-09 11:23:51,318:INFO:Importing libraries
2023-06-09 11:23:51,319:INFO:Copying training dataset
2023-06-09 11:23:51,323:INFO:Defining folds
2023-06-09 11:23:51,323:INFO:Declaring metric variables
2023-06-09 11:23:51,327:INFO:Importing untrained model
2023-06-09 11:23:51,331:INFO:Logistic Regression Imported successfully
2023-06-09 11:23:51,339:INFO:Starting cross validation
2023-06-09 11:23:51,341:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-09 11:23:55,062:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:55,062:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:55,062:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:55,063:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:55,064:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:55,064:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:55,065:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:55,065:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:55,065:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:55,066:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:55,068:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:55,069:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:55,070:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:55,071:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:55,072:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:55,073:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:55,074:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:55,075:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:55,081:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:55,083:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:55,083:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:55,085:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:55,085:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:55,086:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:55,094:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:55,096:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:55,097:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:55,112:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:55,113:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:55,115:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:56,529:INFO:Calculating mean and std
2023-06-09 11:23:56,531:INFO:Creating metrics dataframe
2023-06-09 11:23:56,722:INFO:Uploading results into container
2023-06-09 11:23:56,723:INFO:Uploading model into container now
2023-06-09 11:23:56,723:INFO:_master_model_container: 1
2023-06-09 11:23:56,723:INFO:_display_container: 2
2023-06-09 11:23:56,724:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-09 11:23:56,724:INFO:create_model() successfully completed......................................
2023-06-09 11:23:56,901:INFO:SubProcess create_model() end ==================================
2023-06-09 11:23:56,901:INFO:Creating metrics dataframe
2023-06-09 11:23:56,909:INFO:Initializing K Neighbors Classifier
2023-06-09 11:23:56,909:INFO:Total runtime is 0.09328543742497762 minutes
2023-06-09 11:23:56,912:INFO:SubProcess create_model() called ==================================
2023-06-09 11:23:56,913:INFO:Initializing create_model()
2023-06-09 11:23:56,913:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A386EA560>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A79709180>, model_only=True, return_train_score=False, kwargs={})
2023-06-09 11:23:56,913:INFO:Checking exceptions
2023-06-09 11:23:56,913:INFO:Importing libraries
2023-06-09 11:23:56,913:INFO:Copying training dataset
2023-06-09 11:23:56,917:INFO:Defining folds
2023-06-09 11:23:56,917:INFO:Declaring metric variables
2023-06-09 11:23:56,921:INFO:Importing untrained model
2023-06-09 11:23:56,924:INFO:K Neighbors Classifier Imported successfully
2023-06-09 11:23:56,931:INFO:Starting cross validation
2023-06-09 11:23:56,933:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-09 11:23:57,216:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:57,217:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:57,219:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:57,222:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:57,223:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:57,223:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:57,224:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:57,225:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:57,226:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:57,231:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:57,232:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:57,234:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:59,177:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:59,178:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:59,179:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:59,205:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:59,206:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:59,207:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:59,222:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:59,224:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:59,225:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:59,226:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:59,227:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:59,229:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:59,236:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:59,237:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:59,238:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:59,244:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:59,246:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:23:59,247:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:00,004:INFO:Calculating mean and std
2023-06-09 11:24:00,005:INFO:Creating metrics dataframe
2023-06-09 11:24:00,199:INFO:Uploading results into container
2023-06-09 11:24:00,200:INFO:Uploading model into container now
2023-06-09 11:24:00,200:INFO:_master_model_container: 2
2023-06-09 11:24:00,200:INFO:_display_container: 2
2023-06-09 11:24:00,201:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-09 11:24:00,201:INFO:create_model() successfully completed......................................
2023-06-09 11:24:00,359:INFO:SubProcess create_model() end ==================================
2023-06-09 11:24:00,359:INFO:Creating metrics dataframe
2023-06-09 11:24:00,368:INFO:Initializing Naive Bayes
2023-06-09 11:24:00,368:INFO:Total runtime is 0.15093084573745727 minutes
2023-06-09 11:24:00,371:INFO:SubProcess create_model() called ==================================
2023-06-09 11:24:00,372:INFO:Initializing create_model()
2023-06-09 11:24:00,372:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A386EA560>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A79709180>, model_only=True, return_train_score=False, kwargs={})
2023-06-09 11:24:00,372:INFO:Checking exceptions
2023-06-09 11:24:00,372:INFO:Importing libraries
2023-06-09 11:24:00,372:INFO:Copying training dataset
2023-06-09 11:24:00,377:INFO:Defining folds
2023-06-09 11:24:00,377:INFO:Declaring metric variables
2023-06-09 11:24:00,380:INFO:Importing untrained model
2023-06-09 11:24:00,384:INFO:Naive Bayes Imported successfully
2023-06-09 11:24:00,391:INFO:Starting cross validation
2023-06-09 11:24:00,393:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-09 11:24:00,622:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:00,623:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:00,624:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:00,624:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:00,626:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:00,626:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:00,628:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:00,630:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:00,630:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:00,632:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:00,633:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:00,635:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:00,636:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:00,638:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:00,639:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:00,640:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:00,641:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:00,641:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:00,642:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:00,642:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:00,643:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:00,643:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:00,643:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:00,644:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:00,645:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:00,646:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:00,650:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:00,652:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:00,653:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:02,066:INFO:Calculating mean and std
2023-06-09 11:24:02,069:INFO:Creating metrics dataframe
2023-06-09 11:24:02,256:INFO:Uploading results into container
2023-06-09 11:24:02,257:INFO:Uploading model into container now
2023-06-09 11:24:02,257:INFO:_master_model_container: 3
2023-06-09 11:24:02,257:INFO:_display_container: 2
2023-06-09 11:24:02,258:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-09 11:24:02,258:INFO:create_model() successfully completed......................................
2023-06-09 11:24:02,414:INFO:SubProcess create_model() end ==================================
2023-06-09 11:24:02,415:INFO:Creating metrics dataframe
2023-06-09 11:24:02,423:INFO:Initializing Decision Tree Classifier
2023-06-09 11:24:02,423:INFO:Total runtime is 0.18518224159876506 minutes
2023-06-09 11:24:02,426:INFO:SubProcess create_model() called ==================================
2023-06-09 11:24:02,427:INFO:Initializing create_model()
2023-06-09 11:24:02,427:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A386EA560>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A79709180>, model_only=True, return_train_score=False, kwargs={})
2023-06-09 11:24:02,427:INFO:Checking exceptions
2023-06-09 11:24:02,427:INFO:Importing libraries
2023-06-09 11:24:02,427:INFO:Copying training dataset
2023-06-09 11:24:02,431:INFO:Defining folds
2023-06-09 11:24:02,431:INFO:Declaring metric variables
2023-06-09 11:24:02,435:INFO:Importing untrained model
2023-06-09 11:24:02,439:INFO:Decision Tree Classifier Imported successfully
2023-06-09 11:24:02,445:INFO:Starting cross validation
2023-06-09 11:24:02,447:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-09 11:24:02,672:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:02,673:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:02,673:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:02,673:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:02,674:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:02,675:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:02,676:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:02,677:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:02,677:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:02,679:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:02,680:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:02,680:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:02,685:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:02,686:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:02,687:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:02,687:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:02,687:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:02,688:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:02,688:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:02,688:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:02,688:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:02,689:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:02,689:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:02,690:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:02,696:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:02,697:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:02,697:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:02,698:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:02,699:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:02,699:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:02,699:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:02,700:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:02,700:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:02,701:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:02,701:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:02,702:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:02,711:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:02,712:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:02,713:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:02,714:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:04,112:INFO:Calculating mean and std
2023-06-09 11:24:04,114:INFO:Creating metrics dataframe
2023-06-09 11:24:04,302:INFO:Uploading results into container
2023-06-09 11:24:04,302:INFO:Uploading model into container now
2023-06-09 11:24:04,303:INFO:_master_model_container: 4
2023-06-09 11:24:04,303:INFO:_display_container: 2
2023-06-09 11:24:04,303:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-06-09 11:24:04,303:INFO:create_model() successfully completed......................................
2023-06-09 11:24:04,463:INFO:SubProcess create_model() end ==================================
2023-06-09 11:24:04,463:INFO:Creating metrics dataframe
2023-06-09 11:24:04,472:INFO:Initializing SVM - Linear Kernel
2023-06-09 11:24:04,472:INFO:Total runtime is 0.21932353178660074 minutes
2023-06-09 11:24:04,475:INFO:SubProcess create_model() called ==================================
2023-06-09 11:24:04,476:INFO:Initializing create_model()
2023-06-09 11:24:04,476:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A386EA560>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A79709180>, model_only=True, return_train_score=False, kwargs={})
2023-06-09 11:24:04,476:INFO:Checking exceptions
2023-06-09 11:24:04,476:INFO:Importing libraries
2023-06-09 11:24:04,476:INFO:Copying training dataset
2023-06-09 11:24:04,479:INFO:Defining folds
2023-06-09 11:24:04,480:INFO:Declaring metric variables
2023-06-09 11:24:04,483:INFO:Importing untrained model
2023-06-09 11:24:04,486:INFO:SVM - Linear Kernel Imported successfully
2023-06-09 11:24:04,493:INFO:Starting cross validation
2023-06-09 11:24:04,494:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-09 11:24:04,697:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-09 11:24:04,697:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-09 11:24:04,697:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-09 11:24:04,697:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-09 11:24:04,697:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-09 11:24:04,697:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-09 11:24:04,698:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-09 11:24:04,698:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:04,698:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:04,698:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:04,698:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:04,698:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:04,698:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:04,698:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:04,698:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:04,699:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:04,699:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:04,699:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:04,699:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:04,699:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:04,699:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:04,699:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-09 11:24:04,700:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:04,700:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:04,700:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:04,700:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:04,700:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:04,700:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:04,700:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:04,700:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:04,700:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:04,700:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:04,700:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:04,700:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:04,700:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:04,701:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:04,701:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:04,701:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:04,701:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:04,701:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:04,701:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:04,701:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:04,702:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:04,703:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:04,703:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:06,128:INFO:Calculating mean and std
2023-06-09 11:24:06,130:INFO:Creating metrics dataframe
2023-06-09 11:24:06,316:INFO:Uploading results into container
2023-06-09 11:24:06,316:INFO:Uploading model into container now
2023-06-09 11:24:06,316:INFO:_master_model_container: 5
2023-06-09 11:24:06,317:INFO:_display_container: 2
2023-06-09 11:24:06,317:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-09 11:24:06,317:INFO:create_model() successfully completed......................................
2023-06-09 11:24:06,474:INFO:SubProcess create_model() end ==================================
2023-06-09 11:24:06,475:INFO:Creating metrics dataframe
2023-06-09 11:24:06,485:INFO:Initializing Ridge Classifier
2023-06-09 11:24:06,486:INFO:Total runtime is 0.25289578437805177 minutes
2023-06-09 11:24:06,489:INFO:SubProcess create_model() called ==================================
2023-06-09 11:24:06,489:INFO:Initializing create_model()
2023-06-09 11:24:06,489:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A386EA560>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A79709180>, model_only=True, return_train_score=False, kwargs={})
2023-06-09 11:24:06,490:INFO:Checking exceptions
2023-06-09 11:24:06,490:INFO:Importing libraries
2023-06-09 11:24:06,490:INFO:Copying training dataset
2023-06-09 11:24:06,494:INFO:Defining folds
2023-06-09 11:24:06,494:INFO:Declaring metric variables
2023-06-09 11:24:06,497:INFO:Importing untrained model
2023-06-09 11:24:06,501:INFO:Ridge Classifier Imported successfully
2023-06-09 11:24:06,507:INFO:Starting cross validation
2023-06-09 11:24:06,509:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-09 11:24:06,669:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-09 11:24:06,669:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:06,671:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:06,671:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:06,672:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:06,672:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-09 11:24:06,673:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:06,674:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:06,675:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:06,675:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:06,680:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-09 11:24:06,681:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-09 11:24:06,681:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:06,681:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:06,682:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:06,683:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-09 11:24:06,683:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:06,683:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:06,684:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:06,684:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:06,684:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:06,685:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:06,685:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:06,686:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:06,687:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:06,693:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-09 11:24:06,694:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:06,695:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:06,695:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-09 11:24:06,696:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:06,697:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:06,697:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

etric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-09 11:24:06,698:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:06,698:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:06,699:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:06,699:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:06,699:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:06,700:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:06,704:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-09 11:24:06,705:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:06,706:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:06,707:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:06,707:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:06,708:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-09 11:24:06,709:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:06,710:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:06,711:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:06,711:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:08,097:INFO:Calculating mean and std
2023-06-09 11:24:08,098:INFO:Creating metrics dataframe
2023-06-09 11:24:08,285:INFO:Uploading results into container
2023-06-09 11:24:08,286:INFO:Uploading model into container now
2023-06-09 11:24:08,286:INFO:_master_model_container: 6
2023-06-09 11:24:08,287:INFO:_display_container: 2
2023-06-09 11:24:08,287:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=123, solver='auto', tol=0.001)
2023-06-09 11:24:08,287:INFO:create_model() successfully completed......................................
2023-06-09 11:24:08,444:INFO:SubProcess create_model() end ==================================
2023-06-09 11:24:08,444:INFO:Creating metrics dataframe
2023-06-09 11:24:08,454:INFO:Initializing Random Forest Classifier
2023-06-09 11:24:08,454:INFO:Total runtime is 0.28570322195688885 minutes
2023-06-09 11:24:08,457:INFO:SubProcess create_model() called ==================================
2023-06-09 11:24:08,457:INFO:Initializing create_model()
2023-06-09 11:24:08,457:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A386EA560>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A79709180>, model_only=True, return_train_score=False, kwargs={})
2023-06-09 11:24:08,457:INFO:Checking exceptions
2023-06-09 11:24:08,458:INFO:Importing libraries
2023-06-09 11:24:08,458:INFO:Copying training dataset
2023-06-09 11:24:08,462:INFO:Defining folds
2023-06-09 11:24:08,462:INFO:Declaring metric variables
2023-06-09 11:24:08,464:INFO:Importing untrained model
2023-06-09 11:24:08,468:INFO:Random Forest Classifier Imported successfully
2023-06-09 11:24:08,473:INFO:Starting cross validation
2023-06-09 11:24:08,475:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-09 11:24:09,185:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:09,187:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:09,187:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:09,188:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:09,189:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:09,189:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:09,190:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:09,190:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:09,195:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:09,196:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:09,197:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:09,198:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:09,206:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:09,208:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:09,209:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:09,209:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:09,215:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:09,216:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:09,217:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:09,218:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:09,223:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:09,225:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:09,225:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:09,226:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:09,226:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:09,227:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:09,227:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:09,228:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:09,228:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:09,229:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:09,229:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:09,230:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:09,231:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:09,232:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:09,232:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:09,233:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:09,245:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:09,247:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:09,247:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:09,248:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:10,653:INFO:Calculating mean and std
2023-06-09 11:24:10,654:INFO:Creating metrics dataframe
2023-06-09 11:24:10,847:INFO:Uploading results into container
2023-06-09 11:24:10,848:INFO:Uploading model into container now
2023-06-09 11:24:10,848:INFO:_master_model_container: 7
2023-06-09 11:24:10,848:INFO:_display_container: 2
2023-06-09 11:24:10,849:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-06-09 11:24:10,849:INFO:create_model() successfully completed......................................
2023-06-09 11:24:11,008:INFO:SubProcess create_model() end ==================================
2023-06-09 11:24:11,008:INFO:Creating metrics dataframe
2023-06-09 11:24:11,019:INFO:Initializing Quadratic Discriminant Analysis
2023-06-09 11:24:11,019:INFO:Total runtime is 0.3284387270609538 minutes
2023-06-09 11:24:11,022:INFO:SubProcess create_model() called ==================================
2023-06-09 11:24:11,022:INFO:Initializing create_model()
2023-06-09 11:24:11,022:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A386EA560>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A79709180>, model_only=True, return_train_score=False, kwargs={})
2023-06-09 11:24:11,022:INFO:Checking exceptions
2023-06-09 11:24:11,022:INFO:Importing libraries
2023-06-09 11:24:11,022:INFO:Copying training dataset
2023-06-09 11:24:11,026:INFO:Defining folds
2023-06-09 11:24:11,026:INFO:Declaring metric variables
2023-06-09 11:24:11,029:INFO:Importing untrained model
2023-06-09 11:24:11,033:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-09 11:24:11,039:INFO:Starting cross validation
2023-06-09 11:24:11,040:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-09 11:24:11,159:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-09 11:24:11,159:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-09 11:24:11,159:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-09 11:24:11,159:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-09 11:24:11,162:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-09 11:24:11,162:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-09 11:24:11,165:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-09 11:24:11,166:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-09 11:24:11,178:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-09 11:24:11,209:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:912: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-09 11:24:11,209:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:912: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-09 11:24:11,209:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:912: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-09 11:24:11,209:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:912: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-09 11:24:11,209:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:915: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-09 11:24:11,210:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:915: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-09 11:24:11,214:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:912: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-09 11:24:11,214:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:912: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-09 11:24:11,214:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:912: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-09 11:24:11,215:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:912: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-09 11:24:11,215:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:915: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-09 11:24:11,215:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:915: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-09 11:24:11,218:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:912: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-09 11:24:11,218:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:912: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-09 11:24:11,218:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:915: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-09 11:24:11,218:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:912: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-09 11:24:11,219:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:912: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-09 11:24:11,219:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:912: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-09 11:24:11,219:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:915: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-09 11:24:11,219:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:915: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-09 11:24:11,222:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:912: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-09 11:24:11,222:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:912: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-09 11:24:11,222:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:915: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-09 11:24:11,224:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:912: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-09 11:24:11,224:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:912: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-09 11:24:11,224:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:915: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-09 11:24:11,238:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:912: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-09 11:24:11,238:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:912: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-09 11:24:11,239:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:915: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-09 11:24:11,259:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:912: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-09 11:24:11,259:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:912: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-09 11:24:11,259:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:915: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-09 11:24:11,266:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:912: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-09 11:24:11,267:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:912: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-09 11:24:11,267:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:912: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-09 11:24:11,267:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:915: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-09 11:24:11,267:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:915: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-09 11:24:11,267:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:912: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-09 11:24:11,267:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:912: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-09 11:24:11,268:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:915: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-09 11:24:11,270:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:912: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-09 11:24:11,270:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:912: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-09 11:24:11,270:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:912: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-09 11:24:11,270:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:912: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-09 11:24:11,271:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:915: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-09 11:24:11,271:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:915: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-09 11:24:11,275:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:912: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-09 11:24:11,275:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:912: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-09 11:24:11,275:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:912: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-09 11:24:11,276:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:915: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-09 11:24:11,276:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:912: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-09 11:24:11,276:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:915: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-09 11:24:11,279:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:912: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-09 11:24:11,279:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 312, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_ranking.py", line 550, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\validation.py", line 899, in check_array
    _assert_all_finite(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\validation.py", line 146, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-09 11:24:11,279:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 312, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_ranking.py", line 550, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\validation.py", line 899, in check_array
    _assert_all_finite(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\validation.py", line 146, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-09 11:24:11,279:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:912: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-09 11:24:11,279:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 312, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_ranking.py", line 550, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\validation.py", line 899, in check_array
    _assert_all_finite(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\validation.py", line 146, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-09 11:24:11,279:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 312, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_ranking.py", line 550, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\validation.py", line 899, in check_array
    _assert_all_finite(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\validation.py", line 146, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-09 11:24:11,279:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 312, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_ranking.py", line 550, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\validation.py", line 899, in check_array
    _assert_all_finite(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\validation.py", line 146, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-09 11:24:11,280:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 312, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_ranking.py", line 550, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\validation.py", line 899, in check_array
    _assert_all_finite(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\validation.py", line 146, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-09 11:24:11,280:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 312, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_ranking.py", line 550, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\validation.py", line 899, in check_array
    _assert_all_finite(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\validation.py", line 146, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-09 11:24:11,280:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:11,280:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:11,280:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:11,280:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:11,280:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:11,280:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:11,280:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:11,281:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:11,281:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:11,281:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:11,282:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:11,282:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:11,282:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:11,282:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:11,282:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:11,282:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:11,282:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:11,282:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:11,282:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:11,282:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:11,282:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:11,282:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:11,283:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:11,283:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:11,283:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 312, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_ranking.py", line 550, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\validation.py", line 899, in check_array
    _assert_all_finite(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\validation.py", line 146, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-09 11:24:11,283:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:11,283:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:11,283:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:11,283:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:11,285:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:11,286:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:11,287:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:11,296:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:912: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-09 11:24:11,296:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:912: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-09 11:24:11,296:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:915: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-09 11:24:11,299:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 312, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_ranking.py", line 550, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\validation.py", line 899, in check_array
    _assert_all_finite(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\validation.py", line 146, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-09 11:24:11,299:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:11,301:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:11,301:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:11,302:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:12,736:INFO:Calculating mean and std
2023-06-09 11:24:12,738:INFO:Creating metrics dataframe
2023-06-09 11:24:12,931:INFO:Uploading results into container
2023-06-09 11:24:12,932:INFO:Uploading model into container now
2023-06-09 11:24:12,933:INFO:_master_model_container: 8
2023-06-09 11:24:12,933:INFO:_display_container: 2
2023-06-09 11:24:12,933:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-09 11:24:12,933:INFO:create_model() successfully completed......................................
2023-06-09 11:24:13,090:INFO:SubProcess create_model() end ==================================
2023-06-09 11:24:13,091:INFO:Creating metrics dataframe
2023-06-09 11:24:13,101:INFO:Initializing Ada Boost Classifier
2023-06-09 11:24:13,101:INFO:Total runtime is 0.36314653158187865 minutes
2023-06-09 11:24:13,104:INFO:SubProcess create_model() called ==================================
2023-06-09 11:24:13,104:INFO:Initializing create_model()
2023-06-09 11:24:13,104:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A386EA560>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A79709180>, model_only=True, return_train_score=False, kwargs={})
2023-06-09 11:24:13,104:INFO:Checking exceptions
2023-06-09 11:24:13,104:INFO:Importing libraries
2023-06-09 11:24:13,104:INFO:Copying training dataset
2023-06-09 11:24:13,108:INFO:Defining folds
2023-06-09 11:24:13,108:INFO:Declaring metric variables
2023-06-09 11:24:13,111:INFO:Importing untrained model
2023-06-09 11:24:13,115:INFO:Ada Boost Classifier Imported successfully
2023-06-09 11:24:13,120:INFO:Starting cross validation
2023-06-09 11:24:13,121:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-09 11:24:13,503:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:13,504:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:13,505:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:13,506:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:13,512:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:13,514:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:13,515:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:13,515:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:13,520:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:13,521:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:13,522:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:13,523:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:13,526:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:13,527:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:13,528:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:13,529:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:13,530:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:13,532:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:13,533:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:13,533:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:13,539:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:13,540:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:13,541:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:13,542:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:13,543:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:13,544:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:13,545:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:13,546:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:13,546:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:13,547:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:13,547:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:13,547:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:13,562:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:13,562:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:13,563:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:13,564:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:13,564:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:13,564:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:13,565:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:13,566:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:15,016:INFO:Calculating mean and std
2023-06-09 11:24:15,018:INFO:Creating metrics dataframe
2023-06-09 11:24:15,217:INFO:Uploading results into container
2023-06-09 11:24:15,218:INFO:Uploading model into container now
2023-06-09 11:24:15,219:INFO:_master_model_container: 9
2023-06-09 11:24:15,219:INFO:_display_container: 2
2023-06-09 11:24:15,219:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2023-06-09 11:24:15,219:INFO:create_model() successfully completed......................................
2023-06-09 11:24:15,387:INFO:SubProcess create_model() end ==================================
2023-06-09 11:24:15,387:INFO:Creating metrics dataframe
2023-06-09 11:24:15,398:INFO:Initializing Gradient Boosting Classifier
2023-06-09 11:24:15,398:INFO:Total runtime is 0.40143104394276935 minutes
2023-06-09 11:24:15,402:INFO:SubProcess create_model() called ==================================
2023-06-09 11:24:15,402:INFO:Initializing create_model()
2023-06-09 11:24:15,403:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A386EA560>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A79709180>, model_only=True, return_train_score=False, kwargs={})
2023-06-09 11:24:15,403:INFO:Checking exceptions
2023-06-09 11:24:15,403:INFO:Importing libraries
2023-06-09 11:24:15,403:INFO:Copying training dataset
2023-06-09 11:24:15,407:INFO:Defining folds
2023-06-09 11:24:15,407:INFO:Declaring metric variables
2023-06-09 11:24:15,411:INFO:Importing untrained model
2023-06-09 11:24:15,414:INFO:Gradient Boosting Classifier Imported successfully
2023-06-09 11:24:15,420:INFO:Starting cross validation
2023-06-09 11:24:15,421:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-09 11:24:16,645:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.59s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-09 11:24:16,656:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.61s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-09 11:24:16,657:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.57s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-09 11:24:16,667:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.59s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-09 11:24:16,680:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.59s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-09 11:24:16,681:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.59s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-09 11:24:16,685:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.59s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-09 11:24:16,686:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.59s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-09 11:24:16,701:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.58s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-09 11:24:16,725:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.58s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-09 11:24:17,917:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:17,919:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:17,920:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:17,921:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:17,944:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:17,946:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:17,947:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:17,948:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:17,977:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:17,979:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:17,980:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:17,981:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:17,986:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:17,987:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:17,988:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:17,989:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:17,990:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:17,991:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:17,992:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:17,993:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:18,000:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:18,001:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:18,002:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:18,003:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:18,005:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:18,007:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:18,008:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:18,008:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:18,009:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:18,009:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:18,010:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:18,011:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:18,040:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:18,042:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:18,043:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:18,044:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:18,055:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:18,056:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:18,057:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:18,058:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:19,489:INFO:Calculating mean and std
2023-06-09 11:24:19,491:INFO:Creating metrics dataframe
2023-06-09 11:24:19,721:INFO:Uploading results into container
2023-06-09 11:24:19,722:INFO:Uploading model into container now
2023-06-09 11:24:19,722:INFO:_master_model_container: 10
2023-06-09 11:24:19,722:INFO:_display_container: 2
2023-06-09 11:24:19,723:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-09 11:24:19,723:INFO:create_model() successfully completed......................................
2023-06-09 11:24:19,884:INFO:SubProcess create_model() end ==================================
2023-06-09 11:24:19,884:INFO:Creating metrics dataframe
2023-06-09 11:24:19,895:INFO:Initializing Linear Discriminant Analysis
2023-06-09 11:24:19,895:INFO:Total runtime is 0.4763763308525085 minutes
2023-06-09 11:24:19,899:INFO:SubProcess create_model() called ==================================
2023-06-09 11:24:19,899:INFO:Initializing create_model()
2023-06-09 11:24:19,899:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A386EA560>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A79709180>, model_only=True, return_train_score=False, kwargs={})
2023-06-09 11:24:19,899:INFO:Checking exceptions
2023-06-09 11:24:19,899:INFO:Importing libraries
2023-06-09 11:24:19,900:INFO:Copying training dataset
2023-06-09 11:24:19,904:INFO:Defining folds
2023-06-09 11:24:19,904:INFO:Declaring metric variables
2023-06-09 11:24:19,907:INFO:Importing untrained model
2023-06-09 11:24:19,911:INFO:Linear Discriminant Analysis Imported successfully
2023-06-09 11:24:19,918:INFO:Starting cross validation
2023-06-09 11:24:19,919:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-09 11:24:20,144:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:20,145:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:20,145:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:20,146:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:20,146:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:20,147:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:20,147:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:20,147:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:20,147:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:20,148:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:20,149:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:20,149:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:20,151:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:20,153:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:20,153:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:20,154:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:20,155:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:20,156:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:20,157:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:20,157:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:20,157:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:20,158:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:20,159:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:20,160:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:20,163:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:20,164:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:20,165:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:20,165:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:20,175:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:20,176:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:20,176:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:20,177:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:20,178:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:20,178:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:20,179:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:20,179:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:20,180:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:20,180:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:20,180:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:20,181:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:21,685:INFO:Calculating mean and std
2023-06-09 11:24:21,686:INFO:Creating metrics dataframe
2023-06-09 11:24:21,884:INFO:Uploading results into container
2023-06-09 11:24:21,885:INFO:Uploading model into container now
2023-06-09 11:24:21,885:INFO:_master_model_container: 11
2023-06-09 11:24:21,885:INFO:_display_container: 2
2023-06-09 11:24:21,886:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-09 11:24:21,886:INFO:create_model() successfully completed......................................
2023-06-09 11:24:22,045:INFO:SubProcess create_model() end ==================================
2023-06-09 11:24:22,045:INFO:Creating metrics dataframe
2023-06-09 11:24:22,057:INFO:Initializing Extra Trees Classifier
2023-06-09 11:24:22,057:INFO:Total runtime is 0.5124145825703939 minutes
2023-06-09 11:24:22,060:INFO:SubProcess create_model() called ==================================
2023-06-09 11:24:22,060:INFO:Initializing create_model()
2023-06-09 11:24:22,060:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A386EA560>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A79709180>, model_only=True, return_train_score=False, kwargs={})
2023-06-09 11:24:22,061:INFO:Checking exceptions
2023-06-09 11:24:22,061:INFO:Importing libraries
2023-06-09 11:24:22,061:INFO:Copying training dataset
2023-06-09 11:24:22,064:INFO:Defining folds
2023-06-09 11:24:22,064:INFO:Declaring metric variables
2023-06-09 11:24:22,068:INFO:Importing untrained model
2023-06-09 11:24:22,072:INFO:Extra Trees Classifier Imported successfully
2023-06-09 11:24:22,078:INFO:Starting cross validation
2023-06-09 11:24:22,080:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-09 11:24:22,827:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:22,828:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:22,828:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:22,829:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:22,829:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:22,830:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:22,830:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:22,831:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:22,833:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:22,835:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:22,836:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:22,836:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:22,843:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:22,845:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:22,846:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:22,847:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:22,861:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:22,863:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:22,864:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:22,864:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:22,865:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:22,865:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:22,867:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:22,867:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:22,868:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:22,868:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:22,869:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:22,870:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:22,872:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:22,873:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:22,873:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:22,874:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:22,875:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:22,876:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:22,877:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:22,883:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:22,885:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:22,886:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:22,887:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:24,464:INFO:Calculating mean and std
2023-06-09 11:24:24,466:INFO:Creating metrics dataframe
2023-06-09 11:24:24,685:INFO:Uploading results into container
2023-06-09 11:24:24,685:INFO:Uploading model into container now
2023-06-09 11:24:24,686:INFO:_master_model_container: 12
2023-06-09 11:24:24,686:INFO:_display_container: 2
2023-06-09 11:24:24,687:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2023-06-09 11:24:24,687:INFO:create_model() successfully completed......................................
2023-06-09 11:24:24,883:INFO:SubProcess create_model() end ==================================
2023-06-09 11:24:24,883:INFO:Creating metrics dataframe
2023-06-09 11:24:24,897:INFO:Initializing Light Gradient Boosting Machine
2023-06-09 11:24:24,897:INFO:Total runtime is 0.5597421646118164 minutes
2023-06-09 11:24:24,901:INFO:SubProcess create_model() called ==================================
2023-06-09 11:24:24,901:INFO:Initializing create_model()
2023-06-09 11:24:24,901:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A386EA560>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A79709180>, model_only=True, return_train_score=False, kwargs={})
2023-06-09 11:24:24,901:INFO:Checking exceptions
2023-06-09 11:24:24,901:INFO:Importing libraries
2023-06-09 11:24:24,901:INFO:Copying training dataset
2023-06-09 11:24:24,906:INFO:Defining folds
2023-06-09 11:24:24,906:INFO:Declaring metric variables
2023-06-09 11:24:24,909:INFO:Importing untrained model
2023-06-09 11:24:24,913:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-09 11:24:24,920:INFO:Starting cross validation
2023-06-09 11:24:24,921:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-09 11:24:25,268:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:25,270:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:25,270:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:25,270:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:25,271:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:25,272:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:25,273:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:25,273:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:25,273:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:25,274:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:25,275:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:25,276:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:25,276:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:25,278:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:25,279:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:25,280:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:25,290:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:25,292:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:25,293:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:25,293:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:25,294:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:25,294:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:25,295:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:25,296:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:25,297:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:25,297:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:25,297:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:25,304:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:25,306:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:25,306:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:25,307:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:25,307:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:25,308:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:25,309:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:25,309:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:25,310:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:25,311:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:25,312:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:25,312:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:26,925:INFO:Calculating mean and std
2023-06-09 11:24:26,926:INFO:Creating metrics dataframe
2023-06-09 11:24:27,140:INFO:Uploading results into container
2023-06-09 11:24:27,140:INFO:Uploading model into container now
2023-06-09 11:24:27,141:INFO:_master_model_container: 13
2023-06-09 11:24:27,141:INFO:_display_container: 2
2023-06-09 11:24:27,142:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-09 11:24:27,142:INFO:create_model() successfully completed......................................
2023-06-09 11:24:27,302:INFO:SubProcess create_model() end ==================================
2023-06-09 11:24:27,302:INFO:Creating metrics dataframe
2023-06-09 11:24:27,314:INFO:Initializing Dummy Classifier
2023-06-09 11:24:27,314:INFO:Total runtime is 0.600024402141571 minutes
2023-06-09 11:24:27,317:INFO:SubProcess create_model() called ==================================
2023-06-09 11:24:27,318:INFO:Initializing create_model()
2023-06-09 11:24:27,318:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A386EA560>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A79709180>, model_only=True, return_train_score=False, kwargs={})
2023-06-09 11:24:27,318:INFO:Checking exceptions
2023-06-09 11:24:27,318:INFO:Importing libraries
2023-06-09 11:24:27,318:INFO:Copying training dataset
2023-06-09 11:24:27,322:INFO:Defining folds
2023-06-09 11:24:27,322:INFO:Declaring metric variables
2023-06-09 11:24:27,326:INFO:Importing untrained model
2023-06-09 11:24:27,329:INFO:Dummy Classifier Imported successfully
2023-06-09 11:24:27,335:INFO:Starting cross validation
2023-06-09 11:24:27,337:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-09 11:24:27,554:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:27,556:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:27,556:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:27,557:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:27,564:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:27,566:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:27,567:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:27,567:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:27,570:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:27,572:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:27,573:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:27,573:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:27,575:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:27,575:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:27,576:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:27,576:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:27,577:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:27,577:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:27,578:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:27,578:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:27,583:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:27,585:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:27,586:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:27,586:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:27,588:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:27,590:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:27,590:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:27,591:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:27,591:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:27,591:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:27,592:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:27,593:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:27,595:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:27,597:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:27,598:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:27,599:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:27,602:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:27,604:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:27,604:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:24:27,605:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:24:29,169:INFO:Calculating mean and std
2023-06-09 11:24:29,170:INFO:Creating metrics dataframe
2023-06-09 11:24:29,375:INFO:Uploading results into container
2023-06-09 11:24:29,376:INFO:Uploading model into container now
2023-06-09 11:24:29,376:INFO:_master_model_container: 14
2023-06-09 11:24:29,376:INFO:_display_container: 2
2023-06-09 11:24:29,376:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2023-06-09 11:24:29,376:INFO:create_model() successfully completed......................................
2023-06-09 11:24:29,537:INFO:SubProcess create_model() end ==================================
2023-06-09 11:24:29,537:INFO:Creating metrics dataframe
2023-06-09 11:24:29,558:INFO:Initializing create_model()
2023-06-09 11:24:29,558:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A386EA560>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-09 11:24:29,558:INFO:Checking exceptions
2023-06-09 11:24:29,560:INFO:Importing libraries
2023-06-09 11:24:29,561:INFO:Copying training dataset
2023-06-09 11:24:29,563:INFO:Defining folds
2023-06-09 11:24:29,563:INFO:Declaring metric variables
2023-06-09 11:24:29,564:INFO:Importing untrained model
2023-06-09 11:24:29,564:INFO:Declaring custom model
2023-06-09 11:24:29,564:INFO:Logistic Regression Imported successfully
2023-06-09 11:24:29,565:INFO:Cross validation set to False
2023-06-09 11:24:29,565:INFO:Fitting Model
2023-06-09 11:24:29,850:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-09 11:24:29,850:INFO:create_model() successfully completed......................................
2023-06-09 11:24:30,038:INFO:_master_model_container: 14
2023-06-09 11:24:30,038:INFO:_display_container: 2
2023-06-09 11:24:30,038:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-09 11:24:30,039:INFO:compare_models() successfully completed......................................
2023-06-09 11:25:04,052:INFO:gpu_param set to False
2023-06-09 11:25:04,131:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-09 11:25:04,131:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-09 11:25:04,210:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-09 11:25:04,211:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-09 11:25:23,111:INFO:Initializing create_model()
2023-06-09 11:25:23,111:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A386EA560>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-09 11:25:23,112:INFO:Checking exceptions
2023-06-09 11:25:23,149:INFO:Importing libraries
2023-06-09 11:25:23,149:INFO:Copying training dataset
2023-06-09 11:25:23,153:INFO:Defining folds
2023-06-09 11:25:23,153:INFO:Declaring metric variables
2023-06-09 11:25:23,157:INFO:Importing untrained model
2023-06-09 11:25:23,161:INFO:Logistic Regression Imported successfully
2023-06-09 11:25:23,167:INFO:Starting cross validation
2023-06-09 11:25:23,168:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-09 11:25:23,422:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:25:23,423:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:25:23,425:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:25:23,440:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:25:23,442:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:25:23,444:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:25:23,495:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:25:23,496:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:25:23,497:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:25:23,497:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:25:23,499:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:25:23,500:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:25:23,507:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:25:23,509:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:25:23,510:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:25:23,513:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:25:23,514:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:25:23,515:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:25:23,520:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:25:23,521:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:25:23,521:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:25:23,522:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:25:23,523:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:25:23,524:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:25:23,526:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:25:23,528:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:25:23,529:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:25:23,537:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:25:23,539:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:25:23,540:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:25:25,003:INFO:Calculating mean and std
2023-06-09 11:25:25,005:INFO:Creating metrics dataframe
2023-06-09 11:25:25,010:INFO:Finalizing model
2023-06-09 11:25:25,377:INFO:Uploading results into container
2023-06-09 11:25:25,378:INFO:Uploading model into container now
2023-06-09 11:25:25,389:INFO:_master_model_container: 15
2023-06-09 11:25:25,389:INFO:_display_container: 3
2023-06-09 11:25:25,390:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-09 11:25:25,390:INFO:create_model() successfully completed......................................
2023-06-09 11:25:51,994:INFO:Initializing tune_model()
2023-06-09 11:25:51,995:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A386EA560>)
2023-06-09 11:25:51,995:INFO:Checking exceptions
2023-06-09 11:25:52,031:INFO:Copying training dataset
2023-06-09 11:25:52,034:INFO:Checking base model
2023-06-09 11:25:52,034:INFO:Base model : Logistic Regression
2023-06-09 11:25:52,037:INFO:Declaring metric variables
2023-06-09 11:25:52,041:INFO:Defining Hyperparameters
2023-06-09 11:25:52,226:INFO:Tuning with n_jobs=-1
2023-06-09 11:25:52,226:INFO:Initializing RandomizedSearchCV
2023-06-09 11:25:53,339:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-09 11:25:53,448:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-09 11:25:53,479:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-09 11:25:53,487:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-09 11:25:54,976:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-09 11:25:59,886:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-09 11:26:00,486:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-09 11:26:01,084:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-09 11:26:03,255:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-09 11:26:04,619:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-09 11:26:04,817:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-09 11:26:05,815:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-09 11:26:06,230:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_logistic.py:444: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-09 11:26:12,865:INFO:best_params: {'actual_estimator__class_weight': 'balanced', 'actual_estimator__C': 2.833}
2023-06-09 11:26:12,866:INFO:Hyperparameter search completed
2023-06-09 11:26:12,866:INFO:SubProcess create_model() called ==================================
2023-06-09 11:26:12,867:INFO:Initializing create_model()
2023-06-09 11:26:12,867:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A386EA560>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A27856020>, model_only=True, return_train_score=False, kwargs={'class_weight': 'balanced', 'C': 2.833})
2023-06-09 11:26:12,867:INFO:Checking exceptions
2023-06-09 11:26:12,867:INFO:Importing libraries
2023-06-09 11:26:12,867:INFO:Copying training dataset
2023-06-09 11:26:12,870:INFO:Defining folds
2023-06-09 11:26:12,871:INFO:Declaring metric variables
2023-06-09 11:26:12,874:INFO:Importing untrained model
2023-06-09 11:26:12,874:INFO:Declaring custom model
2023-06-09 11:26:12,878:INFO:Logistic Regression Imported successfully
2023-06-09 11:26:12,883:INFO:Starting cross validation
2023-06-09 11:26:12,884:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-09 11:26:13,118:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:13,118:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:13,119:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:13,119:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:13,120:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:13,121:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:13,127:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:13,128:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:13,130:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:13,131:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:13,133:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:13,134:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:13,139:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:13,140:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:13,140:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:13,141:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:13,142:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:13,142:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:13,142:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:13,143:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:13,143:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:13,143:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:13,145:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:13,146:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:13,149:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:13,151:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:13,152:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:13,154:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:13,156:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:13,158:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:14,912:INFO:Calculating mean and std
2023-06-09 11:26:14,914:INFO:Creating metrics dataframe
2023-06-09 11:26:14,919:INFO:Finalizing model
2023-06-09 11:26:15,372:INFO:Uploading results into container
2023-06-09 11:26:15,373:INFO:Uploading model into container now
2023-06-09 11:26:15,373:INFO:_master_model_container: 16
2023-06-09 11:26:15,373:INFO:_display_container: 4
2023-06-09 11:26:15,374:INFO:LogisticRegression(C=2.833, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-09 11:26:15,374:INFO:create_model() successfully completed......................................
2023-06-09 11:26:15,539:INFO:SubProcess create_model() end ==================================
2023-06-09 11:26:15,539:INFO:choose_better activated
2023-06-09 11:26:15,543:INFO:SubProcess create_model() called ==================================
2023-06-09 11:26:15,543:INFO:Initializing create_model()
2023-06-09 11:26:15,543:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A386EA560>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-09 11:26:15,544:INFO:Checking exceptions
2023-06-09 11:26:15,545:INFO:Importing libraries
2023-06-09 11:26:15,546:INFO:Copying training dataset
2023-06-09 11:26:15,548:INFO:Defining folds
2023-06-09 11:26:15,548:INFO:Declaring metric variables
2023-06-09 11:26:15,548:INFO:Importing untrained model
2023-06-09 11:26:15,548:INFO:Declaring custom model
2023-06-09 11:26:15,549:INFO:Logistic Regression Imported successfully
2023-06-09 11:26:15,549:INFO:Starting cross validation
2023-06-09 11:26:15,550:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-09 11:26:15,766:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:15,768:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:15,769:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:15,788:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:15,790:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:15,791:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:15,842:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:15,844:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:15,845:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:15,856:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:15,857:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:15,859:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:15,863:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:15,864:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:15,865:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:15,866:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:15,866:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:15,868:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:15,870:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:15,872:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:15,873:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:15,873:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:15,875:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:15,876:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:15,880:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:15,881:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:15,882:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:15,882:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:15,883:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:15,884:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:26:17,560:INFO:Calculating mean and std
2023-06-09 11:26:17,561:INFO:Creating metrics dataframe
2023-06-09 11:26:17,563:INFO:Finalizing model
2023-06-09 11:26:17,882:INFO:Uploading results into container
2023-06-09 11:26:17,882:INFO:Uploading model into container now
2023-06-09 11:26:17,883:INFO:_master_model_container: 17
2023-06-09 11:26:17,883:INFO:_display_container: 5
2023-06-09 11:26:17,883:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-09 11:26:17,883:INFO:create_model() successfully completed......................................
2023-06-09 11:26:18,040:INFO:SubProcess create_model() end ==================================
2023-06-09 11:26:18,041:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 1.0
2023-06-09 11:26:18,042:INFO:LogisticRegression(C=2.833, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 1.0
2023-06-09 11:26:18,042:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2023-06-09 11:26:18,042:INFO:choose_better completed
2023-06-09 11:26:18,042:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-06-09 11:26:18,052:INFO:_master_model_container: 17
2023-06-09 11:26:18,052:INFO:_display_container: 4
2023-06-09 11:26:18,053:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-09 11:26:18,053:INFO:tune_model() successfully completed......................................
2023-06-09 11:26:41,034:INFO:Initializing plot_model()
2023-06-09 11:26:41,034:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A386EA560>, system=True)
2023-06-09 11:26:41,034:INFO:Checking exceptions
2023-06-09 11:26:41,038:INFO:Preloading libraries
2023-06-09 11:26:41,038:INFO:Copying training dataset
2023-06-09 11:26:41,038:INFO:Plot type: auc
2023-06-09 11:26:41,205:INFO:Fitting Model
2023-06-09 11:26:41,211:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-09 11:26:41,212:INFO:Scoring test/hold-out set
2023-06-09 11:26:41,432:INFO:Visual Rendered Successfully
2023-06-09 11:26:41,603:INFO:plot_model() successfully completed......................................
2023-06-09 11:27:02,532:INFO:Initializing plot_model()
2023-06-09 11:27:02,532:INFO:plot_model(plot=pr, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A386EA560>, system=True)
2023-06-09 11:27:02,533:INFO:Checking exceptions
2023-06-09 11:27:02,536:INFO:Preloading libraries
2023-06-09 11:27:02,537:INFO:Copying training dataset
2023-06-09 11:27:02,537:INFO:Plot type: pr
2023-06-09 11:27:02,712:INFO:Fitting Model
2023-06-09 11:27:02,750:INFO:Scoring test/hold-out set
2023-06-09 11:27:02,902:INFO:Visual Rendered Successfully
2023-06-09 11:27:03,061:INFO:plot_model() successfully completed......................................
2023-06-09 11:27:18,725:INFO:Initializing plot_model()
2023-06-09 11:27:18,725:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A386EA560>, system=True)
2023-06-09 11:27:18,725:INFO:Checking exceptions
2023-06-09 11:27:18,728:INFO:Preloading libraries
2023-06-09 11:27:18,728:INFO:Copying training dataset
2023-06-09 11:27:18,728:INFO:Plot type: feature
2023-06-09 11:27:18,935:INFO:Visual Rendered Successfully
2023-06-09 11:27:19,122:INFO:plot_model() successfully completed......................................
2023-06-09 11:27:34,258:INFO:Initializing plot_model()
2023-06-09 11:27:34,258:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A386EA560>, system=True)
2023-06-09 11:27:34,258:INFO:Checking exceptions
2023-06-09 11:27:34,262:INFO:Preloading libraries
2023-06-09 11:27:34,262:INFO:Copying training dataset
2023-06-09 11:27:34,262:INFO:Plot type: confusion_matrix
2023-06-09 11:27:34,444:INFO:Fitting Model
2023-06-09 11:27:34,444:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-09 11:27:34,444:INFO:Scoring test/hold-out set
2023-06-09 11:27:34,727:INFO:Visual Rendered Successfully
2023-06-09 11:27:34,895:INFO:plot_model() successfully completed......................................
2023-06-09 11:27:55,457:INFO:Initializing predict_model()
2023-06-09 11:27:55,457:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A386EA560>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022A38BD7EB0>)
2023-06-09 11:27:55,457:INFO:Checking exceptions
2023-06-09 11:27:55,457:INFO:Preloading libraries
2023-06-09 11:27:55,563:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:27:55,565:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:27:55,566:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:28:30,285:INFO:Initializing create_model()
2023-06-09 11:28:30,285:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A386EA560>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-09 11:28:30,286:INFO:Checking exceptions
2023-06-09 11:28:30,322:INFO:Importing libraries
2023-06-09 11:28:30,322:INFO:Copying training dataset
2023-06-09 11:28:30,325:INFO:Defining folds
2023-06-09 11:28:30,326:INFO:Declaring metric variables
2023-06-09 11:28:30,329:INFO:Importing untrained model
2023-06-09 11:28:30,332:INFO:Random Forest Classifier Imported successfully
2023-06-09 11:28:30,337:INFO:Starting cross validation
2023-06-09 11:28:30,339:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-09 11:28:30,841:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:28:30,843:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:28:30,844:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:28:30,845:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:28:30,854:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:28:30,856:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:28:30,857:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:28:30,858:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:28:30,863:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:28:30,863:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:28:30,864:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:28:30,865:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:28:30,865:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:28:30,865:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:28:30,866:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:28:30,866:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:28:30,866:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:28:30,867:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:28:30,867:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:28:30,868:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:28:30,868:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:28:30,868:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:28:30,869:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:28:30,870:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:28:30,870:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:28:30,871:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:28:30,871:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:28:30,871:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:28:30,871:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:28:30,872:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:28:30,872:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:28:30,873:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:28:30,873:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:28:30,873:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:28:30,874:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:28:30,874:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:28:30,874:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:28:30,875:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:28:30,875:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:28:30,876:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:28:32,627:INFO:Calculating mean and std
2023-06-09 11:28:32,629:INFO:Creating metrics dataframe
2023-06-09 11:28:32,634:INFO:Finalizing model
2023-06-09 11:28:33,196:INFO:Uploading results into container
2023-06-09 11:28:33,197:INFO:Uploading model into container now
2023-06-09 11:28:33,206:INFO:_master_model_container: 18
2023-06-09 11:28:33,206:INFO:_display_container: 6
2023-06-09 11:28:33,207:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-06-09 11:28:33,207:INFO:create_model() successfully completed......................................
2023-06-09 11:28:37,152:INFO:Initializing tune_model()
2023-06-09 11:28:37,152:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A386EA560>)
2023-06-09 11:28:37,152:INFO:Checking exceptions
2023-06-09 11:28:37,189:INFO:Copying training dataset
2023-06-09 11:28:37,191:INFO:Checking base model
2023-06-09 11:28:37,191:INFO:Base model : Random Forest Classifier
2023-06-09 11:28:37,194:INFO:Declaring metric variables
2023-06-09 11:28:37,197:INFO:Defining Hyperparameters
2023-06-09 11:28:37,395:INFO:Tuning with n_jobs=-1
2023-06-09 11:28:37,395:INFO:Initializing RandomizedSearchCV
2023-06-09 11:29:03,289:INFO:best_params: {'actual_estimator__n_estimators': 100, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0.1, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 9, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': 'balanced', 'actual_estimator__bootstrap': True}
2023-06-09 11:29:03,291:INFO:Hyperparameter search completed
2023-06-09 11:29:03,291:INFO:SubProcess create_model() called ==================================
2023-06-09 11:29:03,292:INFO:Initializing create_model()
2023-06-09 11:29:03,292:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A386EA560>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A75B6A9E0>, model_only=True, return_train_score=False, kwargs={'n_estimators': 100, 'min_samples_split': 7, 'min_samples_leaf': 4, 'min_impurity_decrease': 0.1, 'max_features': 1.0, 'max_depth': 9, 'criterion': 'gini', 'class_weight': 'balanced', 'bootstrap': True})
2023-06-09 11:29:03,292:INFO:Checking exceptions
2023-06-09 11:29:03,292:INFO:Importing libraries
2023-06-09 11:29:03,292:INFO:Copying training dataset
2023-06-09 11:29:03,295:INFO:Defining folds
2023-06-09 11:29:03,295:INFO:Declaring metric variables
2023-06-09 11:29:03,299:INFO:Importing untrained model
2023-06-09 11:29:03,299:INFO:Declaring custom model
2023-06-09 11:29:03,303:INFO:Random Forest Classifier Imported successfully
2023-06-09 11:29:03,308:INFO:Starting cross validation
2023-06-09 11:29:03,309:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-09 11:29:03,737:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:03,738:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:03,739:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:29:03,740:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:03,770:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:03,772:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:03,773:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:29:03,773:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:03,774:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:03,775:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:03,776:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:03,776:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:03,777:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:29:03,777:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:29:03,777:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:03,778:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:03,779:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:03,780:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:03,781:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:29:03,782:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:03,784:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:03,785:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:03,786:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:29:03,787:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:03,788:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:03,789:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:03,790:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:03,800:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:03,801:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:03,802:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:03,809:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:03,811:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:03,812:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:03,813:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:03,815:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:03,816:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:29:03,816:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:05,882:INFO:Calculating mean and std
2023-06-09 11:29:05,884:INFO:Creating metrics dataframe
2023-06-09 11:29:05,889:INFO:Finalizing model
2023-06-09 11:29:06,480:INFO:Uploading results into container
2023-06-09 11:29:06,481:INFO:Uploading model into container now
2023-06-09 11:29:06,481:INFO:_master_model_container: 19
2023-06-09 11:29:06,481:INFO:_display_container: 7
2023-06-09 11:29:06,482:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=9, max_features=1.0,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=4,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-06-09 11:29:06,482:INFO:create_model() successfully completed......................................
2023-06-09 11:29:06,649:INFO:SubProcess create_model() end ==================================
2023-06-09 11:29:06,649:INFO:choose_better activated
2023-06-09 11:29:06,652:INFO:SubProcess create_model() called ==================================
2023-06-09 11:29:06,653:INFO:Initializing create_model()
2023-06-09 11:29:06,653:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A386EA560>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-09 11:29:06,653:INFO:Checking exceptions
2023-06-09 11:29:06,655:INFO:Importing libraries
2023-06-09 11:29:06,655:INFO:Copying training dataset
2023-06-09 11:29:06,657:INFO:Defining folds
2023-06-09 11:29:06,658:INFO:Declaring metric variables
2023-06-09 11:29:06,658:INFO:Importing untrained model
2023-06-09 11:29:06,658:INFO:Declaring custom model
2023-06-09 11:29:06,658:INFO:Random Forest Classifier Imported successfully
2023-06-09 11:29:06,659:INFO:Starting cross validation
2023-06-09 11:29:06,660:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-09 11:29:07,106:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:07,107:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:07,108:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:29:07,108:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:07,129:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:07,129:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:07,131:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:07,131:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:07,132:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:29:07,132:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:29:07,132:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:07,133:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:07,136:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:07,138:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:07,138:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:07,139:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:29:07,139:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:07,140:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:07,141:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:29:07,141:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:07,141:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:07,143:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:07,144:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:29:07,144:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:07,145:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:07,145:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:07,146:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:07,146:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:07,146:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:29:07,146:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:29:07,147:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:07,147:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:07,148:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:07,149:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:07,150:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:29:07,151:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:07,164:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:07,166:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:07,167:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:29:07,167:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:09,300:INFO:Calculating mean and std
2023-06-09 11:29:09,300:INFO:Creating metrics dataframe
2023-06-09 11:29:09,302:INFO:Finalizing model
2023-06-09 11:29:09,696:INFO:Uploading results into container
2023-06-09 11:29:09,696:INFO:Uploading model into container now
2023-06-09 11:29:09,697:INFO:_master_model_container: 20
2023-06-09 11:29:09,697:INFO:_display_container: 8
2023-06-09 11:29:09,697:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-06-09 11:29:09,697:INFO:create_model() successfully completed......................................
2023-06-09 11:29:09,856:INFO:SubProcess create_model() end ==================================
2023-06-09 11:29:09,856:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False) result for Accuracy is 0.6667
2023-06-09 11:29:09,857:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=9, max_features=1.0,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=4,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False) result for Accuracy is 0.7714
2023-06-09 11:29:09,857:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=9, max_features=1.0,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=4,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False) is best model
2023-06-09 11:29:09,857:INFO:choose_better completed
2023-06-09 11:29:09,867:INFO:_master_model_container: 20
2023-06-09 11:29:09,867:INFO:_display_container: 7
2023-06-09 11:29:09,867:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=9, max_features=1.0,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=4,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-06-09 11:29:09,867:INFO:tune_model() successfully completed......................................
2023-06-09 11:29:12,634:INFO:Initializing plot_model()
2023-06-09 11:29:12,634:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=9, max_features=1.0,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=4,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A386EA560>, system=True)
2023-06-09 11:29:12,634:INFO:Checking exceptions
2023-06-09 11:29:12,653:INFO:Preloading libraries
2023-06-09 11:29:12,662:INFO:Copying training dataset
2023-06-09 11:29:12,662:INFO:Plot type: auc
2023-06-09 11:29:12,835:INFO:Fitting Model
2023-06-09 11:29:12,835:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-06-09 11:29:12,836:INFO:Scoring test/hold-out set
2023-06-09 11:29:13,086:INFO:Visual Rendered Successfully
2023-06-09 11:29:13,250:INFO:plot_model() successfully completed......................................
2023-06-09 11:29:16,086:INFO:Initializing plot_model()
2023-06-09 11:29:16,086:INFO:plot_model(plot=pr, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=9, max_features=1.0,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=4,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A386EA560>, system=True)
2023-06-09 11:29:16,086:INFO:Checking exceptions
2023-06-09 11:29:16,104:INFO:Preloading libraries
2023-06-09 11:29:16,113:INFO:Copying training dataset
2023-06-09 11:29:16,113:INFO:Plot type: pr
2023-06-09 11:29:16,284:INFO:Fitting Model
2023-06-09 11:29:17,211:INFO:Scoring test/hold-out set
2023-06-09 11:29:17,700:INFO:Visual Rendered Successfully
2023-06-09 11:29:17,866:INFO:plot_model() successfully completed......................................
2023-06-09 11:29:24,121:INFO:Initializing plot_model()
2023-06-09 11:29:24,121:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=9, max_features=1.0,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=4,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A386EA560>, system=True)
2023-06-09 11:29:24,121:INFO:Checking exceptions
2023-06-09 11:29:24,140:INFO:Preloading libraries
2023-06-09 11:29:24,149:INFO:Copying training dataset
2023-06-09 11:29:24,149:INFO:Plot type: feature
2023-06-09 11:29:24,149:WARNING:No coef_ found. Trying feature_importances_
2023-06-09 11:29:24,304:INFO:Visual Rendered Successfully
2023-06-09 11:29:24,474:INFO:plot_model() successfully completed......................................
2023-06-09 11:29:42,702:INFO:Initializing predict_model()
2023-06-09 11:29:42,702:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A386EA560>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=9, max_features=1.0,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=4,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022A389416C0>)
2023-06-09 11:29:42,702:INFO:Checking exceptions
2023-06-09 11:29:42,702:INFO:Preloading libraries
2023-06-09 11:29:42,846:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:42,847:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:42,848:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:47,172:INFO:Initializing predict_model()
2023-06-09 11:29:47,173:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A386EA560>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=9, max_features=1.0,
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.1, min_samples_leaf=4,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022A387737F0>)
2023-06-09 11:29:47,173:INFO:Checking exceptions
2023-06-09 11:29:47,173:INFO:Preloading libraries
2023-06-09 11:29:47,308:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:47,309:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:29:47,310:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:31:56,795:INFO:Initializing create_model()
2023-06-09 11:31:56,795:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A386EA560>, estimator=cnn, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-09 11:31:56,795:INFO:Checking exceptions
2023-06-09 11:32:18,461:INFO:Initializing create_model()
2023-06-09 11:32:18,461:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A386EA560>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-09 11:32:18,462:INFO:Checking exceptions
2023-06-09 11:32:18,498:INFO:Importing libraries
2023-06-09 11:32:18,499:INFO:Copying training dataset
2023-06-09 11:32:18,502:INFO:Defining folds
2023-06-09 11:32:18,502:INFO:Declaring metric variables
2023-06-09 11:32:18,506:INFO:Importing untrained model
2023-06-09 11:32:18,509:INFO:Logistic Regression Imported successfully
2023-06-09 11:32:18,515:INFO:Starting cross validation
2023-06-09 11:32:18,517:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-09 11:32:18,765:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:18,767:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:18,768:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:18,785:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:18,787:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:18,788:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:18,836:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:18,838:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:18,839:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:18,844:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:18,845:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:18,847:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:18,848:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:18,849:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:18,849:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:18,850:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:18,850:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:18,851:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:18,862:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:18,863:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:18,864:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:18,886:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:18,888:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:18,889:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:18,889:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:18,890:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:18,891:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:18,891:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:18,892:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:18,893:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:20,934:INFO:Calculating mean and std
2023-06-09 11:32:20,936:INFO:Creating metrics dataframe
2023-06-09 11:32:20,941:INFO:Finalizing model
2023-06-09 11:32:21,321:INFO:Uploading results into container
2023-06-09 11:32:21,322:INFO:Uploading model into container now
2023-06-09 11:32:21,332:INFO:_master_model_container: 21
2023-06-09 11:32:21,332:INFO:_display_container: 10
2023-06-09 11:32:21,332:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-09 11:32:21,333:INFO:create_model() successfully completed......................................
2023-06-09 11:32:24,241:INFO:Initializing tune_model()
2023-06-09 11:32:24,241:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A386EA560>)
2023-06-09 11:32:24,241:INFO:Checking exceptions
2023-06-09 11:32:24,279:INFO:Copying training dataset
2023-06-09 11:32:24,282:INFO:Checking base model
2023-06-09 11:32:24,282:INFO:Base model : Logistic Regression
2023-06-09 11:32:24,286:INFO:Declaring metric variables
2023-06-09 11:32:24,289:INFO:Defining Hyperparameters
2023-06-09 11:32:24,502:INFO:Tuning with n_jobs=-1
2023-06-09 11:32:24,502:INFO:Initializing RandomizedSearchCV
2023-06-09 11:32:49,460:INFO:best_params: {'actual_estimator__class_weight': 'balanced', 'actual_estimator__C': 2.833}
2023-06-09 11:32:49,462:INFO:Hyperparameter search completed
2023-06-09 11:32:49,462:INFO:SubProcess create_model() called ==================================
2023-06-09 11:32:49,463:INFO:Initializing create_model()
2023-06-09 11:32:49,463:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A386EA560>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A3937ACE0>, model_only=True, return_train_score=False, kwargs={'class_weight': 'balanced', 'C': 2.833})
2023-06-09 11:32:49,463:INFO:Checking exceptions
2023-06-09 11:32:49,463:INFO:Importing libraries
2023-06-09 11:32:49,463:INFO:Copying training dataset
2023-06-09 11:32:49,466:INFO:Defining folds
2023-06-09 11:32:49,466:INFO:Declaring metric variables
2023-06-09 11:32:49,470:INFO:Importing untrained model
2023-06-09 11:32:49,470:INFO:Declaring custom model
2023-06-09 11:32:49,473:INFO:Logistic Regression Imported successfully
2023-06-09 11:32:49,479:INFO:Starting cross validation
2023-06-09 11:32:49,480:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-09 11:32:49,686:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:49,687:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:49,689:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:49,691:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:49,692:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:49,693:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:49,696:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:49,697:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:49,698:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:49,698:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:49,699:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:49,699:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:49,700:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:49,701:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:49,702:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:49,714:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:49,716:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:49,716:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:49,717:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:49,717:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:49,718:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:49,718:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:49,719:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:49,720:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:49,720:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:49,721:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:49,722:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:49,723:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:49,724:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:51,838:INFO:Calculating mean and std
2023-06-09 11:32:51,840:INFO:Creating metrics dataframe
2023-06-09 11:32:51,845:INFO:Finalizing model
2023-06-09 11:32:52,208:INFO:Uploading results into container
2023-06-09 11:32:52,209:INFO:Uploading model into container now
2023-06-09 11:32:52,209:INFO:_master_model_container: 22
2023-06-09 11:32:52,209:INFO:_display_container: 11
2023-06-09 11:32:52,210:INFO:LogisticRegression(C=2.833, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-09 11:32:52,210:INFO:create_model() successfully completed......................................
2023-06-09 11:32:52,462:INFO:SubProcess create_model() end ==================================
2023-06-09 11:32:52,462:INFO:choose_better activated
2023-06-09 11:32:52,467:INFO:SubProcess create_model() called ==================================
2023-06-09 11:32:52,467:INFO:Initializing create_model()
2023-06-09 11:32:52,467:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A386EA560>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-09 11:32:52,468:INFO:Checking exceptions
2023-06-09 11:32:52,470:INFO:Importing libraries
2023-06-09 11:32:52,470:INFO:Copying training dataset
2023-06-09 11:32:52,473:INFO:Defining folds
2023-06-09 11:32:52,473:INFO:Declaring metric variables
2023-06-09 11:32:52,474:INFO:Importing untrained model
2023-06-09 11:32:52,474:INFO:Declaring custom model
2023-06-09 11:32:52,474:INFO:Logistic Regression Imported successfully
2023-06-09 11:32:52,475:INFO:Starting cross validation
2023-06-09 11:32:52,475:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-09 11:32:52,703:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:52,705:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:52,706:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:52,720:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:52,722:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:52,724:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:52,737:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:52,739:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:52,740:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:52,798:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:52,800:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:52,801:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:52,802:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:52,803:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:52,804:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:52,810:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:52,811:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:52,813:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:52,814:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:52,816:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:52,816:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:52,817:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:52,817:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:52,818:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:52,819:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:52,819:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:52,820:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:52,836:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:52,838:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:52,839:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:32:54,940:INFO:Calculating mean and std
2023-06-09 11:32:54,940:INFO:Creating metrics dataframe
2023-06-09 11:32:54,942:INFO:Finalizing model
2023-06-09 11:32:55,325:INFO:Uploading results into container
2023-06-09 11:32:55,326:INFO:Uploading model into container now
2023-06-09 11:32:55,326:INFO:_master_model_container: 23
2023-06-09 11:32:55,326:INFO:_display_container: 12
2023-06-09 11:32:55,327:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-09 11:32:55,327:INFO:create_model() successfully completed......................................
2023-06-09 11:32:55,512:INFO:SubProcess create_model() end ==================================
2023-06-09 11:32:55,513:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 1.0
2023-06-09 11:32:55,513:INFO:LogisticRegression(C=2.833, class_weight='balanced', dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 1.0
2023-06-09 11:32:55,513:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2023-06-09 11:32:55,513:INFO:choose_better completed
2023-06-09 11:32:55,514:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-06-09 11:32:55,523:INFO:_master_model_container: 23
2023-06-09 11:32:55,523:INFO:_display_container: 11
2023-06-09 11:32:55,524:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-09 11:32:55,524:INFO:tune_model() successfully completed......................................
2023-06-09 11:33:00,407:INFO:Initializing plot_model()
2023-06-09 11:33:00,407:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A386EA560>, system=True)
2023-06-09 11:33:00,407:INFO:Checking exceptions
2023-06-09 11:33:00,410:INFO:Preloading libraries
2023-06-09 11:33:00,411:INFO:Copying training dataset
2023-06-09 11:33:00,411:INFO:Plot type: auc
2023-06-09 11:33:00,583:INFO:Fitting Model
2023-06-09 11:33:00,583:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-09 11:33:00,583:INFO:Scoring test/hold-out set
2023-06-09 11:33:00,785:INFO:Visual Rendered Successfully
2023-06-09 11:33:00,974:INFO:plot_model() successfully completed......................................
2023-06-09 11:33:02,840:INFO:Initializing plot_model()
2023-06-09 11:33:02,841:INFO:plot_model(plot=pr, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A386EA560>, system=True)
2023-06-09 11:33:02,841:INFO:Checking exceptions
2023-06-09 11:33:02,844:INFO:Preloading libraries
2023-06-09 11:33:02,845:INFO:Copying training dataset
2023-06-09 11:33:02,845:INFO:Plot type: pr
2023-06-09 11:33:03,015:INFO:Fitting Model
2023-06-09 11:33:03,052:INFO:Scoring test/hold-out set
2023-06-09 11:33:03,202:INFO:Visual Rendered Successfully
2023-06-09 11:33:03,392:INFO:plot_model() successfully completed......................................
2023-06-09 11:33:05,925:INFO:Initializing plot_model()
2023-06-09 11:33:05,925:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A386EA560>, system=True)
2023-06-09 11:33:05,925:INFO:Checking exceptions
2023-06-09 11:33:05,928:INFO:Preloading libraries
2023-06-09 11:33:05,928:INFO:Copying training dataset
2023-06-09 11:33:05,928:INFO:Plot type: feature
2023-06-09 11:33:06,132:INFO:Visual Rendered Successfully
2023-06-09 11:33:06,329:INFO:plot_model() successfully completed......................................
2023-06-09 11:33:07,615:INFO:Initializing plot_model()
2023-06-09 11:33:07,615:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A386EA560>, system=True)
2023-06-09 11:33:07,615:INFO:Checking exceptions
2023-06-09 11:33:07,619:INFO:Preloading libraries
2023-06-09 11:33:07,619:INFO:Copying training dataset
2023-06-09 11:33:07,619:INFO:Plot type: confusion_matrix
2023-06-09 11:33:07,789:INFO:Fitting Model
2023-06-09 11:33:07,790:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names
  warnings.warn(

2023-06-09 11:33:07,790:INFO:Scoring test/hold-out set
2023-06-09 11:33:08,060:INFO:Visual Rendered Successfully
2023-06-09 11:33:08,256:INFO:plot_model() successfully completed......................................
2023-06-09 11:33:09,561:INFO:Initializing predict_model()
2023-06-09 11:33:09,561:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A386EA560>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022A3A945870>)
2023-06-09 11:33:09,561:INFO:Checking exceptions
2023-06-09 11:33:09,561:INFO:Preloading libraries
2023-06-09 11:33:09,656:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:33:09,657:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:33:09,658:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1386: UserWarning: Note that pos_label (set to '9') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-09 11:49:51,117:INFO:PyCaret ClassificationExperiment
2023-06-09 11:49:51,117:INFO:Logging name: clf-default-name
2023-06-09 11:49:51,118:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-09 11:49:51,118:INFO:version 3.0.2
2023-06-09 11:49:51,118:INFO:Initializing setup()
2023-06-09 11:49:51,118:INFO:self.USI: 6622
2023-06-09 11:49:51,118:INFO:self._variable_keys: {'fold_groups_param', 'exp_id', 'memory', 'n_jobs_param', 'fold_generator', 'X', 'seed', 'idx', 'html_param', 'logging_param', '_available_plots', 'log_plots_param', 'pipeline', 'X_test', 'USI', 'data', 'y', 'exp_name_log', 'gpu_param', 'fold_shuffle_param', 'fix_imbalance', 'target_param', 'y_test', 'is_multiclass', 'gpu_n_jobs_param', '_ml_usecase', 'y_train', 'X_train'}
2023-06-09 11:49:51,118:INFO:Checking environment
2023-06-09 11:49:51,118:INFO:python_version: 3.10.11
2023-06-09 11:49:51,118:INFO:python_build: ('main', 'May 10 2023 18:51:25')
2023-06-09 11:49:51,118:INFO:machine: AMD64
2023-06-09 11:49:51,118:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-09 11:49:51,118:INFO:Memory: svmem(total=34301440000, available=24441057280, percent=28.7, used=9860382720, free=24441057280)
2023-06-09 11:49:51,118:INFO:Physical Core: 8
2023-06-09 11:49:51,118:INFO:Logical Core: 16
2023-06-09 11:49:51,118:INFO:Checking libraries
2023-06-09 11:49:51,118:INFO:System:
2023-06-09 11:49:51,118:INFO:    python: 3.10.11 | packaged by conda-forge | (main, May 10 2023, 18:51:25) [MSC v.1934 64 bit (AMD64)]
2023-06-09 11:49:51,118:INFO:executable: c:\Users\User\Downloads\solution\.conda\python.exe
2023-06-09 11:49:51,118:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-09 11:49:51,118:INFO:PyCaret required dependencies:
2023-06-09 11:49:51,118:INFO:                 pip: 23.1.2
2023-06-09 11:49:51,118:INFO:          setuptools: 67.7.2
2023-06-09 11:49:51,119:INFO:             pycaret: 3.0.2
2023-06-09 11:49:51,119:INFO:             IPython: 8.5.0
2023-06-09 11:49:51,119:INFO:          ipywidgets: 8.0.6
2023-06-09 11:49:51,119:INFO:                tqdm: 4.65.0
2023-06-09 11:49:51,119:INFO:               numpy: 1.23.3
2023-06-09 11:49:51,119:INFO:              pandas: 1.4.4
2023-06-09 11:49:51,119:INFO:              jinja2: 3.1.2
2023-06-09 11:49:51,119:INFO:               scipy: 1.9.3
2023-06-09 11:49:51,119:INFO:              joblib: 1.2.0
2023-06-09 11:49:51,119:INFO:             sklearn: 1.1.3
2023-06-09 11:49:51,119:INFO:                pyod: 1.0.9
2023-06-09 11:49:51,119:INFO:            imblearn: 0.10.1
2023-06-09 11:49:51,119:INFO:   category_encoders: 2.6.1
2023-06-09 11:49:51,119:INFO:            lightgbm: 3.3.5
2023-06-09 11:49:51,119:INFO:               numba: 0.57.0
2023-06-09 11:49:51,119:INFO:            requests: 2.31.0
2023-06-09 11:49:51,119:INFO:          matplotlib: 3.6.2
2023-06-09 11:49:51,119:INFO:          scikitplot: 0.3.7
2023-06-09 11:49:51,119:INFO:         yellowbrick: 1.5
2023-06-09 11:49:51,119:INFO:              plotly: 5.13.1
2023-06-09 11:49:51,119:INFO:             kaleido: 0.2.1
2023-06-09 11:49:51,119:INFO:         statsmodels: 0.13.5
2023-06-09 11:49:51,119:INFO:              sktime: 0.17.0
2023-06-09 11:49:51,120:INFO:               tbats: 1.1.3
2023-06-09 11:49:51,120:INFO:            pmdarima: 2.0.3
2023-06-09 11:49:51,120:INFO:              psutil: 5.9.3
2023-06-09 11:49:51,120:INFO:PyCaret optional dependencies:
2023-06-09 11:49:51,120:INFO:                shap: Not installed
2023-06-09 11:49:51,120:INFO:           interpret: Not installed
2023-06-09 11:49:51,120:INFO:                umap: Not installed
2023-06-09 11:49:51,120:INFO:    pandas_profiling: Not installed
2023-06-09 11:49:51,120:INFO:  explainerdashboard: Not installed
2023-06-09 11:49:51,120:INFO:             autoviz: Not installed
2023-06-09 11:49:51,120:INFO:           fairlearn: Not installed
2023-06-09 11:49:51,120:INFO:             xgboost: Not installed
2023-06-09 11:49:51,120:INFO:            catboost: Not installed
2023-06-09 11:49:51,120:INFO:              kmodes: Not installed
2023-06-09 11:49:51,120:INFO:             mlxtend: Not installed
2023-06-09 11:49:51,120:INFO:       statsforecast: Not installed
2023-06-09 11:49:51,120:INFO:        tune_sklearn: Not installed
2023-06-09 11:49:51,120:INFO:                 ray: Not installed
2023-06-09 11:49:51,120:INFO:            hyperopt: Not installed
2023-06-09 11:49:51,120:INFO:              optuna: Not installed
2023-06-09 11:49:51,120:INFO:               skopt: Not installed
2023-06-09 11:49:51,120:INFO:              mlflow: Not installed
2023-06-09 11:49:51,120:INFO:              gradio: Not installed
2023-06-09 11:49:51,120:INFO:             fastapi: Not installed
2023-06-09 11:49:51,121:INFO:             uvicorn: Not installed
2023-06-09 11:49:51,121:INFO:              m2cgen: Not installed
2023-06-09 11:49:51,121:INFO:           evidently: Not installed
2023-06-09 11:49:51,121:INFO:               fugue: Not installed
2023-06-09 11:49:51,121:INFO:           streamlit: Not installed
2023-06-09 11:49:51,121:INFO:             prophet: Not installed
2023-06-09 11:49:51,121:INFO:None
2023-06-09 11:49:51,121:INFO:Set up data.
2023-06-09 11:50:04,394:INFO:PyCaret ClassificationExperiment
2023-06-09 11:50:04,394:INFO:Logging name: clf-default-name
2023-06-09 11:50:04,394:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-09 11:50:04,394:INFO:version 3.0.2
2023-06-09 11:50:04,394:INFO:Initializing setup()
2023-06-09 11:50:04,394:INFO:self.USI: 5811
2023-06-09 11:50:04,394:INFO:self._variable_keys: {'fold_groups_param', 'exp_id', 'memory', 'n_jobs_param', 'fold_generator', 'X', 'seed', 'idx', 'html_param', 'logging_param', '_available_plots', 'log_plots_param', 'pipeline', 'X_test', 'USI', 'data', 'y', 'exp_name_log', 'gpu_param', 'fold_shuffle_param', 'fix_imbalance', 'target_param', 'y_test', 'is_multiclass', 'gpu_n_jobs_param', '_ml_usecase', 'y_train', 'X_train'}
2023-06-09 11:50:04,394:INFO:Checking environment
2023-06-09 11:50:04,394:INFO:python_version: 3.10.11
2023-06-09 11:50:04,394:INFO:python_build: ('main', 'May 10 2023 18:51:25')
2023-06-09 11:50:04,394:INFO:machine: AMD64
2023-06-09 11:50:04,394:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-09 11:50:04,394:INFO:Memory: svmem(total=34301440000, available=24434429952, percent=28.8, used=9867010048, free=24434429952)
2023-06-09 11:50:04,394:INFO:Physical Core: 8
2023-06-09 11:50:04,394:INFO:Logical Core: 16
2023-06-09 11:50:04,394:INFO:Checking libraries
2023-06-09 11:50:04,394:INFO:System:
2023-06-09 11:50:04,395:INFO:    python: 3.10.11 | packaged by conda-forge | (main, May 10 2023, 18:51:25) [MSC v.1934 64 bit (AMD64)]
2023-06-09 11:50:04,395:INFO:executable: c:\Users\User\Downloads\solution\.conda\python.exe
2023-06-09 11:50:04,395:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-09 11:50:04,395:INFO:PyCaret required dependencies:
2023-06-09 11:50:04,395:INFO:                 pip: 23.1.2
2023-06-09 11:50:04,395:INFO:          setuptools: 67.7.2
2023-06-09 11:50:04,395:INFO:             pycaret: 3.0.2
2023-06-09 11:50:04,395:INFO:             IPython: 8.5.0
2023-06-09 11:50:04,395:INFO:          ipywidgets: 8.0.6
2023-06-09 11:50:04,395:INFO:                tqdm: 4.65.0
2023-06-09 11:50:04,395:INFO:               numpy: 1.23.3
2023-06-09 11:50:04,395:INFO:              pandas: 1.4.4
2023-06-09 11:50:04,395:INFO:              jinja2: 3.1.2
2023-06-09 11:50:04,395:INFO:               scipy: 1.9.3
2023-06-09 11:50:04,395:INFO:              joblib: 1.2.0
2023-06-09 11:50:04,395:INFO:             sklearn: 1.1.3
2023-06-09 11:50:04,395:INFO:                pyod: 1.0.9
2023-06-09 11:50:04,396:INFO:            imblearn: 0.10.1
2023-06-09 11:50:04,396:INFO:   category_encoders: 2.6.1
2023-06-09 11:50:04,396:INFO:            lightgbm: 3.3.5
2023-06-09 11:50:04,396:INFO:               numba: 0.57.0
2023-06-09 11:50:04,396:INFO:            requests: 2.31.0
2023-06-09 11:50:04,396:INFO:          matplotlib: 3.6.2
2023-06-09 11:50:04,396:INFO:          scikitplot: 0.3.7
2023-06-09 11:50:04,396:INFO:         yellowbrick: 1.5
2023-06-09 11:50:04,396:INFO:              plotly: 5.13.1
2023-06-09 11:50:04,396:INFO:             kaleido: 0.2.1
2023-06-09 11:50:04,396:INFO:         statsmodels: 0.13.5
2023-06-09 11:50:04,396:INFO:              sktime: 0.17.0
2023-06-09 11:50:04,396:INFO:               tbats: 1.1.3
2023-06-09 11:50:04,396:INFO:            pmdarima: 2.0.3
2023-06-09 11:50:04,396:INFO:              psutil: 5.9.3
2023-06-09 11:50:04,396:INFO:PyCaret optional dependencies:
2023-06-09 11:50:04,396:INFO:                shap: Not installed
2023-06-09 11:50:04,397:INFO:           interpret: Not installed
2023-06-09 11:50:04,397:INFO:                umap: Not installed
2023-06-09 11:50:04,397:INFO:    pandas_profiling: Not installed
2023-06-09 11:50:04,397:INFO:  explainerdashboard: Not installed
2023-06-09 11:50:04,397:INFO:             autoviz: Not installed
2023-06-09 11:50:04,397:INFO:           fairlearn: Not installed
2023-06-09 11:50:04,397:INFO:             xgboost: Not installed
2023-06-09 11:50:04,397:INFO:            catboost: Not installed
2023-06-09 11:50:04,397:INFO:              kmodes: Not installed
2023-06-09 11:50:04,397:INFO:             mlxtend: Not installed
2023-06-09 11:50:04,397:INFO:       statsforecast: Not installed
2023-06-09 11:50:04,397:INFO:        tune_sklearn: Not installed
2023-06-09 11:50:04,397:INFO:                 ray: Not installed
2023-06-09 11:50:04,397:INFO:            hyperopt: Not installed
2023-06-09 11:50:04,397:INFO:              optuna: Not installed
2023-06-09 11:50:04,397:INFO:               skopt: Not installed
2023-06-09 11:50:04,397:INFO:              mlflow: Not installed
2023-06-09 11:50:04,397:INFO:              gradio: Not installed
2023-06-09 11:50:04,397:INFO:             fastapi: Not installed
2023-06-09 11:50:04,397:INFO:             uvicorn: Not installed
2023-06-09 11:50:04,397:INFO:              m2cgen: Not installed
2023-06-09 11:50:04,398:INFO:           evidently: Not installed
2023-06-09 11:50:04,398:INFO:               fugue: Not installed
2023-06-09 11:50:04,398:INFO:           streamlit: Not installed
2023-06-09 11:50:04,398:INFO:             prophet: Not installed
2023-06-09 11:50:04,398:INFO:None
2023-06-09 11:50:04,398:INFO:Set up data.
2023-06-09 11:50:04,548:INFO:Set up train/test split.
2023-06-09 11:50:04,558:INFO:Set up index.
2023-06-09 11:50:04,558:INFO:Set up folding strategy.
2023-06-09 11:50:04,558:INFO:Assigning column types.
2023-06-09 11:50:04,562:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-09 11:50:04,611:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-09 11:50:04,611:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-09 11:50:04,641:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-09 11:50:04,641:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-09 11:50:04,689:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-09 11:50:04,689:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-09 11:50:04,719:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-09 11:50:04,720:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-09 11:50:04,720:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-09 11:50:04,768:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-09 11:50:04,798:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-09 11:50:04,798:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-09 11:50:04,846:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-09 11:50:04,876:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-09 11:50:04,876:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-09 11:50:04,877:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-09 11:50:04,954:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-09 11:50:04,955:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-09 11:50:05,033:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-09 11:50:05,033:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-09 11:50:05,034:INFO:Preparing preprocessing pipeline...
2023-06-09 11:50:05,035:INFO:Set up simple imputation.
2023-06-09 11:50:05,095:INFO:Finished creating preprocessing pipeline.
2023-06-09 11:50:05,102:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\User\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['0', '1', '2', '3', '4', '5', '6',
                                             '7', '8', '9', '10', '11', '12',
                                             '13', '14', '15', '16', '17', '18',
                                             '19', '20', '21', '22', '23', '24',
                                             '25', '26', '27', '28', '29', ...],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-06-09 11:50:05,102:INFO:Creating final display dataframe.
2023-06-09 11:50:05,382:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            labels
2                   Target type        Multiclass
3           Original data shape        (300, 785)
4        Transformed data shape        (300, 785)
5   Transformed train set shape        (210, 785)
6    Transformed test set shape         (90, 785)
7              Numeric features               784
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              5811
2023-06-09 11:50:05,466:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-09 11:50:05,467:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-09 11:50:05,549:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-09 11:50:05,549:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-09 11:50:05,550:INFO:setup() successfully completed in 1.39s...............
2023-06-09 11:50:07,671:INFO:Initializing compare_models()
2023-06-09 11:50:07,671:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-09 11:50:07,672:INFO:Checking exceptions
2023-06-09 11:50:07,687:INFO:Preparing display monitor
2023-06-09 11:50:07,728:INFO:Initializing Logistic Regression
2023-06-09 11:50:07,728:INFO:Total runtime is 0.0 minutes
2023-06-09 11:50:07,731:INFO:SubProcess create_model() called ==================================
2023-06-09 11:50:07,731:INFO:Initializing create_model()
2023-06-09 11:50:07,731:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A38353610>, model_only=True, return_train_score=False, kwargs={})
2023-06-09 11:50:07,731:INFO:Checking exceptions
2023-06-09 11:50:07,731:INFO:Importing libraries
2023-06-09 11:50:07,731:INFO:Copying training dataset
2023-06-09 11:50:07,737:INFO:Defining folds
2023-06-09 11:50:07,737:INFO:Declaring metric variables
2023-06-09 11:50:07,741:INFO:Importing untrained model
2023-06-09 11:50:07,744:INFO:Logistic Regression Imported successfully
2023-06-09 11:50:07,750:INFO:Starting cross validation
2023-06-09 11:50:07,753:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-09 11:50:13,951:INFO:Calculating mean and std
2023-06-09 11:50:13,953:INFO:Creating metrics dataframe
2023-06-09 11:50:14,273:INFO:Uploading results into container
2023-06-09 11:50:14,274:INFO:Uploading model into container now
2023-06-09 11:50:14,274:INFO:_master_model_container: 1
2023-06-09 11:50:14,275:INFO:_display_container: 2
2023-06-09 11:50:14,275:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-09 11:50:14,275:INFO:create_model() successfully completed......................................
2023-06-09 11:50:14,524:INFO:SubProcess create_model() end ==================================
2023-06-09 11:50:14,524:INFO:Creating metrics dataframe
2023-06-09 11:50:14,532:INFO:Initializing K Neighbors Classifier
2023-06-09 11:50:14,532:INFO:Total runtime is 0.11339604457219442 minutes
2023-06-09 11:50:14,535:INFO:SubProcess create_model() called ==================================
2023-06-09 11:50:14,535:INFO:Initializing create_model()
2023-06-09 11:50:14,535:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A38353610>, model_only=True, return_train_score=False, kwargs={})
2023-06-09 11:50:14,535:INFO:Checking exceptions
2023-06-09 11:50:14,535:INFO:Importing libraries
2023-06-09 11:50:14,536:INFO:Copying training dataset
2023-06-09 11:50:14,543:INFO:Defining folds
2023-06-09 11:50:14,543:INFO:Declaring metric variables
2023-06-09 11:50:14,546:INFO:Importing untrained model
2023-06-09 11:50:14,549:INFO:K Neighbors Classifier Imported successfully
2023-06-09 11:50:14,556:INFO:Starting cross validation
2023-06-09 11:50:14,560:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-09 11:50:16,891:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:50:16,903:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:50:18,118:INFO:Calculating mean and std
2023-06-09 11:50:18,119:INFO:Creating metrics dataframe
2023-06-09 11:50:18,423:INFO:Uploading results into container
2023-06-09 11:50:18,424:INFO:Uploading model into container now
2023-06-09 11:50:18,424:INFO:_master_model_container: 2
2023-06-09 11:50:18,424:INFO:_display_container: 2
2023-06-09 11:50:18,425:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-09 11:50:18,425:INFO:create_model() successfully completed......................................
2023-06-09 11:50:18,652:INFO:SubProcess create_model() end ==================================
2023-06-09 11:50:18,652:INFO:Creating metrics dataframe
2023-06-09 11:50:18,661:INFO:Initializing Naive Bayes
2023-06-09 11:50:18,661:INFO:Total runtime is 0.18220362265904744 minutes
2023-06-09 11:50:18,664:INFO:SubProcess create_model() called ==================================
2023-06-09 11:50:18,664:INFO:Initializing create_model()
2023-06-09 11:50:18,664:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A38353610>, model_only=True, return_train_score=False, kwargs={})
2023-06-09 11:50:18,664:INFO:Checking exceptions
2023-06-09 11:50:18,664:INFO:Importing libraries
2023-06-09 11:50:18,664:INFO:Copying training dataset
2023-06-09 11:50:18,671:INFO:Defining folds
2023-06-09 11:50:18,671:INFO:Declaring metric variables
2023-06-09 11:50:18,674:INFO:Importing untrained model
2023-06-09 11:50:18,678:INFO:Naive Bayes Imported successfully
2023-06-09 11:50:18,684:INFO:Starting cross validation
2023-06-09 11:50:18,687:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-09 11:50:19,026:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:50:19,037:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:50:19,063:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:50:19,063:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:50:19,065:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:50:19,066:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:50:21,298:INFO:Calculating mean and std
2023-06-09 11:50:21,299:INFO:Creating metrics dataframe
2023-06-09 11:50:21,622:INFO:Uploading results into container
2023-06-09 11:50:21,623:INFO:Uploading model into container now
2023-06-09 11:50:21,623:INFO:_master_model_container: 3
2023-06-09 11:50:21,623:INFO:_display_container: 2
2023-06-09 11:50:21,624:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-09 11:50:21,624:INFO:create_model() successfully completed......................................
2023-06-09 11:50:21,849:INFO:SubProcess create_model() end ==================================
2023-06-09 11:50:21,849:INFO:Creating metrics dataframe
2023-06-09 11:50:21,858:INFO:Initializing Decision Tree Classifier
2023-06-09 11:50:21,858:INFO:Total runtime is 0.2354938507080078 minutes
2023-06-09 11:50:21,861:INFO:SubProcess create_model() called ==================================
2023-06-09 11:50:21,862:INFO:Initializing create_model()
2023-06-09 11:50:21,862:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A38353610>, model_only=True, return_train_score=False, kwargs={})
2023-06-09 11:50:21,862:INFO:Checking exceptions
2023-06-09 11:50:21,862:INFO:Importing libraries
2023-06-09 11:50:21,862:INFO:Copying training dataset
2023-06-09 11:50:21,869:INFO:Defining folds
2023-06-09 11:50:21,869:INFO:Declaring metric variables
2023-06-09 11:50:21,873:INFO:Importing untrained model
2023-06-09 11:50:21,876:INFO:Decision Tree Classifier Imported successfully
2023-06-09 11:50:21,882:INFO:Starting cross validation
2023-06-09 11:50:21,886:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-09 11:50:22,266:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:50:22,271:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:50:22,278:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:50:22,278:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:50:24,497:INFO:Calculating mean and std
2023-06-09 11:50:24,498:INFO:Creating metrics dataframe
2023-06-09 11:50:24,804:INFO:Uploading results into container
2023-06-09 11:50:24,805:INFO:Uploading model into container now
2023-06-09 11:50:24,805:INFO:_master_model_container: 4
2023-06-09 11:50:24,805:INFO:_display_container: 2
2023-06-09 11:50:24,806:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2023-06-09 11:50:24,806:INFO:create_model() successfully completed......................................
2023-06-09 11:50:25,088:INFO:SubProcess create_model() end ==================================
2023-06-09 11:50:25,089:INFO:Creating metrics dataframe
2023-06-09 11:50:25,098:INFO:Initializing SVM - Linear Kernel
2023-06-09 11:50:25,098:INFO:Total runtime is 0.28949830134709675 minutes
2023-06-09 11:50:25,101:INFO:SubProcess create_model() called ==================================
2023-06-09 11:50:25,101:INFO:Initializing create_model()
2023-06-09 11:50:25,101:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A38353610>, model_only=True, return_train_score=False, kwargs={})
2023-06-09 11:50:25,101:INFO:Checking exceptions
2023-06-09 11:50:25,102:INFO:Importing libraries
2023-06-09 11:50:25,102:INFO:Copying training dataset
2023-06-09 11:50:25,109:INFO:Defining folds
2023-06-09 11:50:25,109:INFO:Declaring metric variables
2023-06-09 11:50:25,113:INFO:Importing untrained model
2023-06-09 11:50:25,117:INFO:SVM - Linear Kernel Imported successfully
2023-06-09 11:50:25,126:INFO:Starting cross validation
2023-06-09 11:50:25,130:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-09 11:50:25,370:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-09 11:50:25,377:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-09 11:50:25,387:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-09 11:50:25,388:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-09 11:50:25,391:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-09 11:50:25,395:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-09 11:50:25,395:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-09 11:50:25,403:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-09 11:50:25,405:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-09 11:50:25,406:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\utils\metaestimators.py", line 127, in __get__
    if not self.check(obj):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1222, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-09 11:50:27,572:INFO:Calculating mean and std
2023-06-09 11:50:27,574:INFO:Creating metrics dataframe
2023-06-09 11:50:27,885:INFO:Uploading results into container
2023-06-09 11:50:27,886:INFO:Uploading model into container now
2023-06-09 11:50:27,886:INFO:_master_model_container: 5
2023-06-09 11:50:27,887:INFO:_display_container: 2
2023-06-09 11:50:27,887:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-09 11:50:27,887:INFO:create_model() successfully completed......................................
2023-06-09 11:50:28,113:INFO:SubProcess create_model() end ==================================
2023-06-09 11:50:28,113:INFO:Creating metrics dataframe
2023-06-09 11:50:28,123:INFO:Initializing Ridge Classifier
2023-06-09 11:50:28,123:INFO:Total runtime is 0.33991479078928627 minutes
2023-06-09 11:50:28,126:INFO:SubProcess create_model() called ==================================
2023-06-09 11:50:28,126:INFO:Initializing create_model()
2023-06-09 11:50:28,126:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A38353610>, model_only=True, return_train_score=False, kwargs={})
2023-06-09 11:50:28,126:INFO:Checking exceptions
2023-06-09 11:50:28,127:INFO:Importing libraries
2023-06-09 11:50:28,127:INFO:Copying training dataset
2023-06-09 11:50:28,133:INFO:Defining folds
2023-06-09 11:50:28,134:INFO:Declaring metric variables
2023-06-09 11:50:28,137:INFO:Importing untrained model
2023-06-09 11:50:28,140:INFO:Ridge Classifier Imported successfully
2023-06-09 11:50:28,146:INFO:Starting cross validation
2023-06-09 11:50:28,150:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-09 11:50:28,375:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-09 11:50:28,378:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-09 11:50:28,385:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-09 11:50:28,385:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-09 11:50:28,391:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-09 11:50:28,393:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-09 11:50:28,394:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-09 11:50:28,395:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-09 11:50:28,396:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:50:28,396:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:50:28,402:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-09 11:50:28,416:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 74, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 301, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-09 11:50:30,569:INFO:Calculating mean and std
2023-06-09 11:50:30,571:INFO:Creating metrics dataframe
2023-06-09 11:50:30,884:INFO:Uploading results into container
2023-06-09 11:50:30,884:INFO:Uploading model into container now
2023-06-09 11:50:30,885:INFO:_master_model_container: 6
2023-06-09 11:50:30,885:INFO:_display_container: 2
2023-06-09 11:50:30,886:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, normalize='deprecated', positive=False,
                random_state=123, solver='auto', tol=0.001)
2023-06-09 11:50:30,886:INFO:create_model() successfully completed......................................
2023-06-09 11:50:31,166:INFO:SubProcess create_model() end ==================================
2023-06-09 11:50:31,166:INFO:Creating metrics dataframe
2023-06-09 11:50:31,176:INFO:Initializing Random Forest Classifier
2023-06-09 11:50:31,176:INFO:Total runtime is 0.3907897392908732 minutes
2023-06-09 11:50:31,179:INFO:SubProcess create_model() called ==================================
2023-06-09 11:50:31,179:INFO:Initializing create_model()
2023-06-09 11:50:31,180:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A38353610>, model_only=True, return_train_score=False, kwargs={})
2023-06-09 11:50:31,180:INFO:Checking exceptions
2023-06-09 11:50:31,180:INFO:Importing libraries
2023-06-09 11:50:31,180:INFO:Copying training dataset
2023-06-09 11:50:31,187:INFO:Defining folds
2023-06-09 11:50:31,187:INFO:Declaring metric variables
2023-06-09 11:50:31,190:INFO:Importing untrained model
2023-06-09 11:50:31,194:INFO:Random Forest Classifier Imported successfully
2023-06-09 11:50:31,199:INFO:Starting cross validation
2023-06-09 11:50:31,203:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-09 11:50:34,433:INFO:Calculating mean and std
2023-06-09 11:50:34,435:INFO:Creating metrics dataframe
2023-06-09 11:50:34,754:INFO:Uploading results into container
2023-06-09 11:50:34,754:INFO:Uploading model into container now
2023-06-09 11:50:34,755:INFO:_master_model_container: 7
2023-06-09 11:50:34,755:INFO:_display_container: 2
2023-06-09 11:50:34,756:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2023-06-09 11:50:34,756:INFO:create_model() successfully completed......................................
2023-06-09 11:50:34,983:INFO:SubProcess create_model() end ==================================
2023-06-09 11:50:34,983:INFO:Creating metrics dataframe
2023-06-09 11:50:34,993:INFO:Initializing Quadratic Discriminant Analysis
2023-06-09 11:50:34,994:INFO:Total runtime is 0.45442430575688675 minutes
2023-06-09 11:50:34,997:INFO:SubProcess create_model() called ==================================
2023-06-09 11:50:34,997:INFO:Initializing create_model()
2023-06-09 11:50:34,997:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A38353610>, model_only=True, return_train_score=False, kwargs={})
2023-06-09 11:50:34,997:INFO:Checking exceptions
2023-06-09 11:50:34,997:INFO:Importing libraries
2023-06-09 11:50:34,997:INFO:Copying training dataset
2023-06-09 11:50:35,004:INFO:Defining folds
2023-06-09 11:50:35,005:INFO:Declaring metric variables
2023-06-09 11:50:35,008:INFO:Importing untrained model
2023-06-09 11:50:35,010:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-09 11:50:35,017:INFO:Starting cross validation
2023-06-09 11:50:35,021:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-09 11:50:35,141:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-09 11:50:35,153:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-09 11:50:35,155:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-09 11:50:35,165:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-09 11:50:35,169:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-09 11:50:35,169:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-09 11:50:35,169:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-09 11:50:35,171:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-09 11:50:35,172:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-09 11:50:35,176:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\discriminant_analysis.py:887: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-09 11:50:35,340:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:50:35,341:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:50:35,366:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:50:35,366:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:50:35,366:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:50:35,376:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:50:35,382:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:50:35,389:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:50:35,396:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:50:35,403:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:50:37,607:INFO:Calculating mean and std
2023-06-09 11:50:37,608:INFO:Creating metrics dataframe
2023-06-09 11:50:37,920:INFO:Uploading results into container
2023-06-09 11:50:37,921:INFO:Uploading model into container now
2023-06-09 11:50:37,921:INFO:_master_model_container: 8
2023-06-09 11:50:37,922:INFO:_display_container: 2
2023-06-09 11:50:37,922:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-09 11:50:37,922:INFO:create_model() successfully completed......................................
2023-06-09 11:50:38,147:INFO:SubProcess create_model() end ==================================
2023-06-09 11:50:38,148:INFO:Creating metrics dataframe
2023-06-09 11:50:38,159:INFO:Initializing Ada Boost Classifier
2023-06-09 11:50:38,159:INFO:Total runtime is 0.5071706930796305 minutes
2023-06-09 11:50:38,162:INFO:SubProcess create_model() called ==================================
2023-06-09 11:50:38,162:INFO:Initializing create_model()
2023-06-09 11:50:38,162:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A38353610>, model_only=True, return_train_score=False, kwargs={})
2023-06-09 11:50:38,163:INFO:Checking exceptions
2023-06-09 11:50:38,163:INFO:Importing libraries
2023-06-09 11:50:38,163:INFO:Copying training dataset
2023-06-09 11:50:38,170:INFO:Defining folds
2023-06-09 11:50:38,170:INFO:Declaring metric variables
2023-06-09 11:50:38,173:INFO:Importing untrained model
2023-06-09 11:50:38,176:INFO:Ada Boost Classifier Imported successfully
2023-06-09 11:50:38,182:INFO:Starting cross validation
2023-06-09 11:50:38,186:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-09 11:50:39,176:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:50:39,189:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:50:39,204:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:50:39,221:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:50:39,223:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:50:39,227:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:50:39,228:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:50:39,232:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:50:39,237:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:50:39,256:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:50:41,441:INFO:Calculating mean and std
2023-06-09 11:50:41,443:INFO:Creating metrics dataframe
2023-06-09 11:50:41,761:INFO:Uploading results into container
2023-06-09 11:50:41,761:INFO:Uploading model into container now
2023-06-09 11:50:41,762:INFO:_master_model_container: 9
2023-06-09 11:50:41,762:INFO:_display_container: 2
2023-06-09 11:50:41,762:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2023-06-09 11:50:41,762:INFO:create_model() successfully completed......................................
2023-06-09 11:50:41,989:INFO:SubProcess create_model() end ==================================
2023-06-09 11:50:41,989:INFO:Creating metrics dataframe
2023-06-09 11:50:42,000:INFO:Initializing Gradient Boosting Classifier
2023-06-09 11:50:42,000:INFO:Total runtime is 0.5711854736010233 minutes
2023-06-09 11:50:42,003:INFO:SubProcess create_model() called ==================================
2023-06-09 11:50:42,003:INFO:Initializing create_model()
2023-06-09 11:50:42,003:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A38353610>, model_only=True, return_train_score=False, kwargs={})
2023-06-09 11:50:42,003:INFO:Checking exceptions
2023-06-09 11:50:42,003:INFO:Importing libraries
2023-06-09 11:50:42,004:INFO:Copying training dataset
2023-06-09 11:50:42,010:INFO:Defining folds
2023-06-09 11:50:42,010:INFO:Declaring metric variables
2023-06-09 11:50:42,013:INFO:Importing untrained model
2023-06-09 11:50:42,017:INFO:Gradient Boosting Classifier Imported successfully
2023-06-09 11:50:42,023:INFO:Starting cross validation
2023-06-09 11:50:42,027:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-09 11:50:57,078:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.68s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-09 11:50:57,087:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.68s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-09 11:50:57,115:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.64s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-09 11:50:57,175:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.67s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-09 11:50:57,205:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.65s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-09 11:50:57,239:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.68s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-09 11:50:57,266:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.72s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-09 11:50:57,302:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.69s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-09 11:50:57,315:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.72s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-09 11:50:57,427:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.72s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-09 11:50:58,531:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:50:58,701:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:50:58,720:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:50:58,788:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:51:00,771:INFO:Calculating mean and std
2023-06-09 11:51:00,773:INFO:Creating metrics dataframe
2023-06-09 11:51:01,095:INFO:Uploading results into container
2023-06-09 11:51:01,096:INFO:Uploading model into container now
2023-06-09 11:51:01,096:INFO:_master_model_container: 10
2023-06-09 11:51:01,096:INFO:_display_container: 2
2023-06-09 11:51:01,097:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-09 11:51:01,097:INFO:create_model() successfully completed......................................
2023-06-09 11:51:01,330:INFO:SubProcess create_model() end ==================================
2023-06-09 11:51:01,330:INFO:Creating metrics dataframe
2023-06-09 11:51:01,341:INFO:Initializing Linear Discriminant Analysis
2023-06-09 11:51:01,342:INFO:Total runtime is 0.893559734026591 minutes
2023-06-09 11:51:01,344:INFO:SubProcess create_model() called ==================================
2023-06-09 11:51:01,345:INFO:Initializing create_model()
2023-06-09 11:51:01,345:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A38353610>, model_only=True, return_train_score=False, kwargs={})
2023-06-09 11:51:01,345:INFO:Checking exceptions
2023-06-09 11:51:01,345:INFO:Importing libraries
2023-06-09 11:51:01,345:INFO:Copying training dataset
2023-06-09 11:51:01,352:INFO:Defining folds
2023-06-09 11:51:01,352:INFO:Declaring metric variables
2023-06-09 11:51:01,355:INFO:Importing untrained model
2023-06-09 11:51:01,359:INFO:Linear Discriminant Analysis Imported successfully
2023-06-09 11:51:01,365:INFO:Starting cross validation
2023-06-09 11:51:01,369:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-09 11:51:01,764:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:51:04,049:INFO:Calculating mean and std
2023-06-09 11:51:04,050:INFO:Creating metrics dataframe
2023-06-09 11:51:04,404:INFO:Uploading results into container
2023-06-09 11:51:04,405:INFO:Uploading model into container now
2023-06-09 11:51:04,405:INFO:_master_model_container: 11
2023-06-09 11:51:04,406:INFO:_display_container: 2
2023-06-09 11:51:04,406:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-09 11:51:04,406:INFO:create_model() successfully completed......................................
2023-06-09 11:51:04,700:INFO:SubProcess create_model() end ==================================
2023-06-09 11:51:04,701:INFO:Creating metrics dataframe
2023-06-09 11:51:04,713:INFO:Initializing Extra Trees Classifier
2023-06-09 11:51:04,713:INFO:Total runtime is 0.9497470855712891 minutes
2023-06-09 11:51:04,717:INFO:SubProcess create_model() called ==================================
2023-06-09 11:51:04,717:INFO:Initializing create_model()
2023-06-09 11:51:04,718:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A38353610>, model_only=True, return_train_score=False, kwargs={})
2023-06-09 11:51:04,718:INFO:Checking exceptions
2023-06-09 11:51:04,718:INFO:Importing libraries
2023-06-09 11:51:04,718:INFO:Copying training dataset
2023-06-09 11:51:04,727:INFO:Defining folds
2023-06-09 11:51:04,727:INFO:Declaring metric variables
2023-06-09 11:51:04,731:INFO:Importing untrained model
2023-06-09 11:51:04,736:INFO:Extra Trees Classifier Imported successfully
2023-06-09 11:51:04,743:INFO:Starting cross validation
2023-06-09 11:51:04,748:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-09 11:51:05,740:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:51:08,129:INFO:Calculating mean and std
2023-06-09 11:51:08,131:INFO:Creating metrics dataframe
2023-06-09 11:51:08,485:INFO:Uploading results into container
2023-06-09 11:51:08,486:INFO:Uploading model into container now
2023-06-09 11:51:08,486:INFO:_master_model_container: 12
2023-06-09 11:51:08,487:INFO:_display_container: 2
2023-06-09 11:51:08,487:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2023-06-09 11:51:08,487:INFO:create_model() successfully completed......................................
2023-06-09 11:51:08,727:INFO:SubProcess create_model() end ==================================
2023-06-09 11:51:08,727:INFO:Creating metrics dataframe
2023-06-09 11:51:08,739:INFO:Initializing Light Gradient Boosting Machine
2023-06-09 11:51:08,739:INFO:Total runtime is 1.0168391346931458 minutes
2023-06-09 11:51:08,742:INFO:SubProcess create_model() called ==================================
2023-06-09 11:51:08,743:INFO:Initializing create_model()
2023-06-09 11:51:08,743:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A38353610>, model_only=True, return_train_score=False, kwargs={})
2023-06-09 11:51:08,743:INFO:Checking exceptions
2023-06-09 11:51:08,743:INFO:Importing libraries
2023-06-09 11:51:08,743:INFO:Copying training dataset
2023-06-09 11:51:08,750:INFO:Defining folds
2023-06-09 11:51:08,750:INFO:Declaring metric variables
2023-06-09 11:51:08,753:INFO:Importing untrained model
2023-06-09 11:51:08,757:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-09 11:51:08,765:INFO:Starting cross validation
2023-06-09 11:51:08,769:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-09 11:51:11,723:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:51:11,754:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:51:13,959:INFO:Calculating mean and std
2023-06-09 11:51:13,961:INFO:Creating metrics dataframe
2023-06-09 11:51:14,308:INFO:Uploading results into container
2023-06-09 11:51:14,309:INFO:Uploading model into container now
2023-06-09 11:51:14,309:INFO:_master_model_container: 13
2023-06-09 11:51:14,309:INFO:_display_container: 2
2023-06-09 11:51:14,310:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-09 11:51:14,310:INFO:create_model() successfully completed......................................
2023-06-09 11:51:14,540:INFO:SubProcess create_model() end ==================================
2023-06-09 11:51:14,540:INFO:Creating metrics dataframe
2023-06-09 11:51:14,552:INFO:Initializing Dummy Classifier
2023-06-09 11:51:14,552:INFO:Total runtime is 1.1137310147285462 minutes
2023-06-09 11:51:14,556:INFO:SubProcess create_model() called ==================================
2023-06-09 11:51:14,556:INFO:Initializing create_model()
2023-06-09 11:51:14,556:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A38353610>, model_only=True, return_train_score=False, kwargs={})
2023-06-09 11:51:14,556:INFO:Checking exceptions
2023-06-09 11:51:14,556:INFO:Importing libraries
2023-06-09 11:51:14,556:INFO:Copying training dataset
2023-06-09 11:51:14,566:INFO:Defining folds
2023-06-09 11:51:14,566:INFO:Declaring metric variables
2023-06-09 11:51:14,570:INFO:Importing untrained model
2023-06-09 11:51:14,574:INFO:Dummy Classifier Imported successfully
2023-06-09 11:51:14,579:INFO:Starting cross validation
2023-06-09 11:51:14,583:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-09 11:51:14,865:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:51:14,878:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:51:14,887:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:51:14,889:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:51:14,890:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:51:14,901:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:51:14,903:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:51:14,904:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:51:14,905:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:51:14,910:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:51:17,260:INFO:Calculating mean and std
2023-06-09 11:51:17,262:INFO:Creating metrics dataframe
2023-06-09 11:51:17,600:INFO:Uploading results into container
2023-06-09 11:51:17,600:INFO:Uploading model into container now
2023-06-09 11:51:17,601:INFO:_master_model_container: 14
2023-06-09 11:51:17,601:INFO:_display_container: 2
2023-06-09 11:51:17,601:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2023-06-09 11:51:17,601:INFO:create_model() successfully completed......................................
2023-06-09 11:51:17,834:INFO:SubProcess create_model() end ==================================
2023-06-09 11:51:17,835:INFO:Creating metrics dataframe
2023-06-09 11:51:17,855:INFO:Initializing create_model()
2023-06-09 11:51:17,855:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-09 11:51:17,855:INFO:Checking exceptions
2023-06-09 11:51:17,858:INFO:Importing libraries
2023-06-09 11:51:17,858:INFO:Copying training dataset
2023-06-09 11:51:17,864:INFO:Defining folds
2023-06-09 11:51:17,864:INFO:Declaring metric variables
2023-06-09 11:51:17,864:INFO:Importing untrained model
2023-06-09 11:51:17,864:INFO:Declaring custom model
2023-06-09 11:51:17,865:INFO:Extra Trees Classifier Imported successfully
2023-06-09 11:51:17,868:INFO:Cross validation set to False
2023-06-09 11:51:17,868:INFO:Fitting Model
2023-06-09 11:51:18,650:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2023-06-09 11:51:18,650:INFO:create_model() successfully completed......................................
2023-06-09 11:51:18,909:INFO:_master_model_container: 14
2023-06-09 11:51:18,909:INFO:_display_container: 2
2023-06-09 11:51:18,909:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2023-06-09 11:51:18,910:INFO:compare_models() successfully completed......................................
2023-06-09 11:51:25,992:INFO:gpu_param set to False
2023-06-09 11:51:26,071:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-09 11:51:26,071:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-09 11:51:26,149:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-09 11:51:26,149:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-09 11:51:30,151:INFO:Initializing create_model()
2023-06-09 11:51:30,151:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, estimator=et, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-09 11:51:30,151:INFO:Checking exceptions
2023-06-09 11:51:30,189:INFO:Importing libraries
2023-06-09 11:51:30,189:INFO:Copying training dataset
2023-06-09 11:51:30,196:INFO:Defining folds
2023-06-09 11:51:30,196:INFO:Declaring metric variables
2023-06-09 11:51:30,200:INFO:Importing untrained model
2023-06-09 11:51:30,204:INFO:Extra Trees Classifier Imported successfully
2023-06-09 11:51:30,212:INFO:Starting cross validation
2023-06-09 11:51:30,216:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-09 11:51:30,789:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:51:33,219:INFO:Calculating mean and std
2023-06-09 11:51:33,220:INFO:Creating metrics dataframe
2023-06-09 11:51:33,226:INFO:Finalizing model
2023-06-09 11:51:33,669:INFO:Uploading results into container
2023-06-09 11:51:33,669:INFO:Uploading model into container now
2023-06-09 11:51:33,679:INFO:_master_model_container: 15
2023-06-09 11:51:33,679:INFO:_display_container: 3
2023-06-09 11:51:33,680:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2023-06-09 11:51:33,680:INFO:create_model() successfully completed......................................
2023-06-09 11:51:40,833:INFO:Initializing tune_model()
2023-06-09 11:51:40,833:INFO:tune_model(estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>)
2023-06-09 11:51:40,834:INFO:Checking exceptions
2023-06-09 11:51:40,872:INFO:Copying training dataset
2023-06-09 11:51:40,877:INFO:Checking base model
2023-06-09 11:51:40,877:INFO:Base model : Extra Trees Classifier
2023-06-09 11:51:40,881:INFO:Declaring metric variables
2023-06-09 11:51:40,884:INFO:Defining Hyperparameters
2023-06-09 11:51:41,128:INFO:Tuning with n_jobs=-1
2023-06-09 11:51:41,128:INFO:Initializing RandomizedSearchCV
2023-06-09 11:52:14,960:INFO:best_params: {'actual_estimator__n_estimators': 190, 'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 6, 'actual_estimator__min_impurity_decrease': 0.001, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 6, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': 'balanced_subsample', 'actual_estimator__bootstrap': False}
2023-06-09 11:52:14,961:INFO:Hyperparameter search completed
2023-06-09 11:52:14,962:INFO:SubProcess create_model() called ==================================
2023-06-09 11:52:14,962:INFO:Initializing create_model()
2023-06-09 11:52:14,963:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022A55468700>, model_only=True, return_train_score=False, kwargs={'n_estimators': 190, 'min_samples_split': 9, 'min_samples_leaf': 6, 'min_impurity_decrease': 0.001, 'max_features': 'log2', 'max_depth': 6, 'criterion': 'gini', 'class_weight': 'balanced_subsample', 'bootstrap': False})
2023-06-09 11:52:14,963:INFO:Checking exceptions
2023-06-09 11:52:14,963:INFO:Importing libraries
2023-06-09 11:52:14,963:INFO:Copying training dataset
2023-06-09 11:52:14,970:INFO:Defining folds
2023-06-09 11:52:14,970:INFO:Declaring metric variables
2023-06-09 11:52:14,973:INFO:Importing untrained model
2023-06-09 11:52:14,973:INFO:Declaring custom model
2023-06-09 11:52:14,977:INFO:Extra Trees Classifier Imported successfully
2023-06-09 11:52:14,983:INFO:Starting cross validation
2023-06-09 11:52:14,987:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-09 11:52:18,565:INFO:Calculating mean and std
2023-06-09 11:52:18,567:INFO:Creating metrics dataframe
2023-06-09 11:52:18,573:INFO:Finalizing model
2023-06-09 11:52:19,436:INFO:Uploading results into container
2023-06-09 11:52:19,436:INFO:Uploading model into container now
2023-06-09 11:52:19,437:INFO:_master_model_container: 16
2023-06-09 11:52:19,437:INFO:_display_container: 4
2023-06-09 11:52:19,438:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                     class_weight='balanced_subsample', criterion='gini',
                     max_depth=6, max_features='log2', max_leaf_nodes=None,
                     max_samples=None, min_impurity_decrease=0.001,
                     min_samples_leaf=6, min_samples_split=9,
                     min_weight_fraction_leaf=0.0, n_estimators=190, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2023-06-09 11:52:19,438:INFO:create_model() successfully completed......................................
2023-06-09 11:52:19,673:INFO:SubProcess create_model() end ==================================
2023-06-09 11:52:19,673:INFO:choose_better activated
2023-06-09 11:52:19,677:INFO:SubProcess create_model() called ==================================
2023-06-09 11:52:19,677:INFO:Initializing create_model()
2023-06-09 11:52:19,677:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-09 11:52:19,677:INFO:Checking exceptions
2023-06-09 11:52:19,679:INFO:Importing libraries
2023-06-09 11:52:19,679:INFO:Copying training dataset
2023-06-09 11:52:19,685:INFO:Defining folds
2023-06-09 11:52:19,685:INFO:Declaring metric variables
2023-06-09 11:52:19,685:INFO:Importing untrained model
2023-06-09 11:52:19,685:INFO:Declaring custom model
2023-06-09 11:52:19,686:INFO:Extra Trees Classifier Imported successfully
2023-06-09 11:52:19,686:INFO:Starting cross validation
2023-06-09 11:52:19,689:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-09 11:52:20,229:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\metrics\_classification.py:1334: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-09 11:52:22,975:INFO:Calculating mean and std
2023-06-09 11:52:22,976:INFO:Creating metrics dataframe
2023-06-09 11:52:22,978:INFO:Finalizing model
2023-06-09 11:52:23,459:INFO:Uploading results into container
2023-06-09 11:52:23,460:INFO:Uploading model into container now
2023-06-09 11:52:23,460:INFO:_master_model_container: 17
2023-06-09 11:52:23,460:INFO:_display_container: 5
2023-06-09 11:52:23,461:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2023-06-09 11:52:23,461:INFO:create_model() successfully completed......................................
2023-06-09 11:52:23,688:INFO:SubProcess create_model() end ==================================
2023-06-09 11:52:23,689:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False) result for Accuracy is 0.9619
2023-06-09 11:52:23,690:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                     class_weight='balanced_subsample', criterion='gini',
                     max_depth=6, max_features='log2', max_leaf_nodes=None,
                     max_samples=None, min_impurity_decrease=0.001,
                     min_samples_leaf=6, min_samples_split=9,
                     min_weight_fraction_leaf=0.0, n_estimators=190, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False) result for Accuracy is 0.9476
2023-06-09 11:52:23,690:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False) is best model
2023-06-09 11:52:23,690:INFO:choose_better completed
2023-06-09 11:52:23,690:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-06-09 11:52:23,700:INFO:_master_model_container: 17
2023-06-09 11:52:23,700:INFO:_display_container: 4
2023-06-09 11:52:23,700:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2023-06-09 11:52:23,701:INFO:tune_model() successfully completed......................................
2023-06-09 11:52:33,133:INFO:Initializing plot_model()
2023-06-09 11:52:33,133:INFO:plot_model(plot=auc, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, system=True)
2023-06-09 11:52:33,133:INFO:Checking exceptions
2023-06-09 11:52:33,155:INFO:Preloading libraries
2023-06-09 11:52:33,165:INFO:Copying training dataset
2023-06-09 11:52:33,165:INFO:Plot type: auc
2023-06-09 11:52:33,445:INFO:Fitting Model
2023-06-09 11:52:33,445:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2023-06-09 11:52:33,445:INFO:Scoring test/hold-out set
2023-06-09 11:52:33,698:INFO:Visual Rendered Successfully
2023-06-09 11:52:33,938:INFO:plot_model() successfully completed......................................
2023-06-09 11:52:36,522:INFO:Initializing plot_model()
2023-06-09 11:52:36,522:INFO:plot_model(plot=pr, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, system=True)
2023-06-09 11:52:36,522:INFO:Checking exceptions
2023-06-09 11:52:36,546:INFO:Preloading libraries
2023-06-09 11:52:36,555:INFO:Copying training dataset
2023-06-09 11:52:36,555:INFO:Plot type: pr
2023-06-09 11:52:36,835:INFO:Fitting Model
2023-06-09 11:52:37,919:INFO:Scoring test/hold-out set
2023-06-09 11:52:38,533:INFO:Visual Rendered Successfully
2023-06-09 11:52:38,764:INFO:plot_model() successfully completed......................................
2023-06-09 11:52:41,556:INFO:Initializing plot_model()
2023-06-09 11:52:41,556:INFO:plot_model(plot=feature, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, system=True)
2023-06-09 11:52:41,556:INFO:Checking exceptions
2023-06-09 11:52:41,579:INFO:Preloading libraries
2023-06-09 11:52:41,588:INFO:Copying training dataset
2023-06-09 11:52:41,588:INFO:Plot type: feature
2023-06-09 11:52:41,588:WARNING:No coef_ found. Trying feature_importances_
2023-06-09 11:52:41,796:INFO:Visual Rendered Successfully
2023-06-09 11:52:42,058:INFO:plot_model() successfully completed......................................
2023-06-09 11:52:50,955:INFO:Initializing plot_model()
2023-06-09 11:52:50,956:INFO:plot_model(plot=confusion_matrix, fold=None, use_train_data=False, verbose=True, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, system=True)
2023-06-09 11:52:50,956:INFO:Checking exceptions
2023-06-09 11:52:50,978:INFO:Preloading libraries
2023-06-09 11:52:50,988:INFO:Copying training dataset
2023-06-09 11:52:50,988:INFO:Plot type: confusion_matrix
2023-06-09 11:52:51,263:INFO:Fitting Model
2023-06-09 11:52:51,264:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2023-06-09 11:52:51,264:INFO:Scoring test/hold-out set
2023-06-09 11:52:51,605:INFO:Visual Rendered Successfully
2023-06-09 11:52:51,851:INFO:plot_model() successfully completed......................................
2023-06-09 11:52:54,470:INFO:Initializing predict_model()
2023-06-09 11:52:54,470:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022A3E7743A0>)
2023-06-09 11:52:54,470:INFO:Checking exceptions
2023-06-09 11:52:54,470:INFO:Preloading libraries
2023-06-09 11:54:10,630:INFO:Initializing evaluate_model()
2023-06-09 11:54:10,630:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-09 11:54:10,663:INFO:Initializing plot_model()
2023-06-09 11:54:10,663:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, system=True)
2023-06-09 11:54:10,663:INFO:Checking exceptions
2023-06-09 11:54:10,688:INFO:Preloading libraries
2023-06-09 11:54:10,698:INFO:Copying training dataset
2023-06-09 11:54:10,698:INFO:Plot type: pipeline
2023-06-09 11:54:10,827:INFO:Visual Rendered Successfully
2023-06-09 11:54:11,065:INFO:plot_model() successfully completed......................................
2023-06-09 11:54:14,598:INFO:Initializing plot_model()
2023-06-09 11:54:14,598:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, system=True)
2023-06-09 11:54:14,598:INFO:Checking exceptions
2023-06-09 11:54:14,618:INFO:Preloading libraries
2023-06-09 11:54:14,626:INFO:Copying training dataset
2023-06-09 11:54:14,626:INFO:Plot type: parameter
2023-06-09 11:54:14,630:INFO:Visual Rendered Successfully
2023-06-09 11:54:14,874:INFO:plot_model() successfully completed......................................
2023-06-09 11:54:15,523:INFO:Initializing plot_model()
2023-06-09 11:54:15,523:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, system=True)
2023-06-09 11:54:15,524:INFO:Checking exceptions
2023-06-09 11:54:15,542:INFO:Preloading libraries
2023-06-09 11:54:15,551:INFO:Copying training dataset
2023-06-09 11:54:15,551:INFO:Plot type: auc
2023-06-09 11:54:15,820:INFO:Fitting Model
2023-06-09 11:54:15,820:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2023-06-09 11:54:15,821:INFO:Scoring test/hold-out set
2023-06-09 11:54:16,068:INFO:Visual Rendered Successfully
2023-06-09 11:54:16,297:INFO:plot_model() successfully completed......................................
2023-06-09 11:54:16,355:INFO:Initializing plot_model()
2023-06-09 11:54:16,356:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, system=True)
2023-06-09 11:54:16,356:INFO:Checking exceptions
2023-06-09 11:54:16,377:INFO:Preloading libraries
2023-06-09 11:54:16,386:INFO:Copying training dataset
2023-06-09 11:54:16,386:INFO:Plot type: parameter
2023-06-09 11:54:16,390:INFO:Visual Rendered Successfully
2023-06-09 11:54:16,649:INFO:plot_model() successfully completed......................................
2023-06-09 11:54:16,959:INFO:Initializing plot_model()
2023-06-09 11:54:16,959:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, system=True)
2023-06-09 11:54:16,959:INFO:Checking exceptions
2023-06-09 11:54:16,978:INFO:Preloading libraries
2023-06-09 11:54:16,987:INFO:Copying training dataset
2023-06-09 11:54:16,987:INFO:Plot type: auc
2023-06-09 11:54:17,255:INFO:Fitting Model
2023-06-09 11:54:17,255:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2023-06-09 11:54:17,255:INFO:Scoring test/hold-out set
2023-06-09 11:54:17,496:INFO:Visual Rendered Successfully
2023-06-09 11:54:17,723:INFO:plot_model() successfully completed......................................
2023-06-09 11:54:19,019:INFO:Initializing plot_model()
2023-06-09 11:54:19,019:INFO:plot_model(plot=gain, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, system=True)
2023-06-09 11:54:19,019:INFO:Checking exceptions
2023-06-09 11:54:19,038:INFO:Preloading libraries
2023-06-09 11:54:19,047:INFO:Copying training dataset
2023-06-09 11:54:19,047:INFO:Plot type: gain
2023-06-09 11:54:19,047:INFO:Generating predictions / predict_proba on X_test
2023-06-09 11:54:20,899:INFO:Initializing plot_model()
2023-06-09 11:54:20,899:INFO:plot_model(plot=boundary, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, system=True)
2023-06-09 11:54:20,899:INFO:Checking exceptions
2023-06-09 11:54:20,917:INFO:Preloading libraries
2023-06-09 11:54:20,926:INFO:Copying training dataset
2023-06-09 11:54:20,926:INFO:Plot type: boundary
2023-06-09 11:54:21,064:INFO:Fitting StandardScaler()
2023-06-09 11:54:21,090:INFO:Fitting PCA()
2023-06-09 11:54:21,236:INFO:Fitting Model
2023-06-09 11:54:21,912:WARNING:c:\Users\User\Downloads\solution\.conda\lib\site-packages\yellowbrick\contrib\classifier\boundaries.py:467: UserWarning: You passed a edgecolor/edgecolors ('black') for an unfilled marker ('+').  Matplotlib is ignoring the edgecolor in favor of the facecolor.  This behavior may change in the future.
  self.ax.scatter(

2023-06-09 11:54:23,306:INFO:Visual Rendered Successfully
2023-06-09 11:54:23,619:INFO:plot_model() successfully completed......................................
2023-06-09 11:54:24,851:INFO:Initializing plot_model()
2023-06-09 11:54:24,851:INFO:plot_model(plot=feature_all, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, system=True)
2023-06-09 11:54:24,852:INFO:Checking exceptions
2023-06-09 11:54:24,870:INFO:Preloading libraries
2023-06-09 11:54:24,878:INFO:Copying training dataset
2023-06-09 11:54:24,878:INFO:Plot type: feature_all
2023-06-09 11:54:24,947:WARNING:No coef_ found. Trying feature_importances_
2023-06-09 11:54:29,180:INFO:Visual Rendered Successfully
2023-06-09 11:54:29,547:INFO:plot_model() successfully completed......................................
2023-06-09 11:54:31,568:INFO:Initializing plot_model()
2023-06-09 11:54:31,568:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, system=True)
2023-06-09 11:54:31,568:INFO:Checking exceptions
2023-06-09 11:54:31,588:INFO:Preloading libraries
2023-06-09 11:54:31,597:INFO:Copying training dataset
2023-06-09 11:54:31,597:INFO:Plot type: feature
2023-06-09 11:54:31,598:WARNING:No coef_ found. Trying feature_importances_
2023-06-09 11:54:31,801:INFO:Visual Rendered Successfully
2023-06-09 11:54:32,081:INFO:plot_model() successfully completed......................................
2023-06-09 11:54:32,829:INFO:Initializing plot_model()
2023-06-09 11:54:32,829:INFO:plot_model(plot=lift, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, system=True)
2023-06-09 11:54:32,829:INFO:Checking exceptions
2023-06-09 11:54:32,847:INFO:Preloading libraries
2023-06-09 11:54:32,856:INFO:Copying training dataset
2023-06-09 11:54:32,856:INFO:Plot type: lift
2023-06-09 11:54:32,857:INFO:Generating predictions / predict_proba on X_test
2023-06-09 11:54:37,379:INFO:Initializing plot_model()
2023-06-09 11:54:37,379:INFO:plot_model(plot=vc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, system=True)
2023-06-09 11:54:37,379:INFO:Checking exceptions
2023-06-09 11:54:37,398:INFO:Preloading libraries
2023-06-09 11:54:37,407:INFO:Copying training dataset
2023-06-09 11:54:37,407:INFO:Plot type: vc
2023-06-09 11:54:37,407:INFO:Determining param_name
2023-06-09 11:54:37,408:INFO:param_name: max_depth
2023-06-09 11:54:37,691:INFO:Fitting Model
2023-06-09 11:54:39,814:INFO:Visual Rendered Successfully
2023-06-09 11:54:40,067:INFO:plot_model() successfully completed......................................
2023-06-09 11:54:49,759:INFO:Initializing plot_model()
2023-06-09 11:54:49,759:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, system=True)
2023-06-09 11:54:49,759:INFO:Checking exceptions
2023-06-09 11:54:49,781:INFO:Preloading libraries
2023-06-09 11:54:49,790:INFO:Copying training dataset
2023-06-09 11:54:49,790:INFO:Plot type: confusion_matrix
2023-06-09 11:54:50,068:INFO:Fitting Model
2023-06-09 11:54:50,068:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2023-06-09 11:54:50,068:INFO:Scoring test/hold-out set
2023-06-09 11:54:50,384:INFO:Visual Rendered Successfully
2023-06-09 11:54:50,633:INFO:plot_model() successfully completed......................................
2023-06-09 11:54:51,402:INFO:Initializing plot_model()
2023-06-09 11:54:51,402:INFO:plot_model(plot=tree, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, system=True)
2023-06-09 11:54:51,402:INFO:Checking exceptions
2023-06-09 11:54:51,420:INFO:Preloading libraries
2023-06-09 11:54:51,429:INFO:Copying training dataset
2023-06-09 11:54:51,429:INFO:Plot type: tree
2023-06-09 11:54:52,378:INFO:Plotting decision trees
2023-06-09 11:55:08,579:INFO:Initializing plot_model()
2023-06-09 11:55:08,580:INFO:plot_model(plot=feature, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, system=True)
2023-06-09 11:55:08,580:INFO:Checking exceptions
2023-06-09 11:55:08,606:INFO:Preloading libraries
2023-06-09 11:55:08,616:INFO:Copying training dataset
2023-06-09 11:55:08,616:INFO:Plot type: feature
2023-06-09 11:55:08,616:WARNING:No coef_ found. Trying feature_importances_
2023-06-09 11:55:08,838:INFO:Visual Rendered Successfully
2023-06-09 11:55:09,261:INFO:plot_model() successfully completed......................................
2023-06-09 11:55:11,092:INFO:Initializing plot_model()
2023-06-09 11:55:11,092:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, system=True)
2023-06-09 11:55:11,092:INFO:Checking exceptions
2023-06-09 11:55:11,113:INFO:Preloading libraries
2023-06-09 11:55:11,122:INFO:Copying training dataset
2023-06-09 11:55:11,122:INFO:Plot type: pipeline
2023-06-09 11:55:11,189:INFO:Visual Rendered Successfully
2023-06-09 11:55:11,593:INFO:plot_model() successfully completed......................................
2023-06-09 11:55:12,580:INFO:Initializing plot_model()
2023-06-09 11:55:12,581:INFO:plot_model(plot=class_report, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, system=True)
2023-06-09 11:55:12,581:INFO:Checking exceptions
2023-06-09 11:55:12,600:INFO:Preloading libraries
2023-06-09 11:55:12,608:INFO:Copying training dataset
2023-06-09 11:55:12,608:INFO:Plot type: class_report
2023-06-09 11:55:12,880:INFO:Fitting Model
2023-06-09 11:55:12,880:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2023-06-09 11:55:12,880:INFO:Scoring test/hold-out set
2023-06-09 11:55:13,178:INFO:Visual Rendered Successfully
2023-06-09 11:55:13,574:INFO:plot_model() successfully completed......................................
2023-06-09 11:55:32,894:INFO:Initializing plot_model()
2023-06-09 11:55:32,894:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, system=True)
2023-06-09 11:55:32,894:INFO:Checking exceptions
2023-06-09 11:55:32,913:INFO:Preloading libraries
2023-06-09 11:55:32,922:INFO:Copying training dataset
2023-06-09 11:55:32,922:INFO:Plot type: auc
2023-06-09 11:55:33,188:INFO:Fitting Model
2023-06-09 11:55:33,189:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2023-06-09 11:55:33,189:INFO:Scoring test/hold-out set
2023-06-09 11:55:33,440:INFO:Visual Rendered Successfully
2023-06-09 11:55:33,813:INFO:plot_model() successfully completed......................................
2023-06-09 11:55:43,481:INFO:Initializing plot_model()
2023-06-09 11:55:43,481:INFO:plot_model(plot=class_report, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, system=True)
2023-06-09 11:55:43,481:INFO:Checking exceptions
2023-06-09 11:55:43,502:INFO:Preloading libraries
2023-06-09 11:55:43,510:INFO:Copying training dataset
2023-06-09 11:55:43,510:INFO:Plot type: class_report
2023-06-09 11:55:43,779:INFO:Fitting Model
2023-06-09 11:55:43,779:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2023-06-09 11:55:43,779:INFO:Scoring test/hold-out set
2023-06-09 11:55:44,087:INFO:Visual Rendered Successfully
2023-06-09 11:55:44,465:INFO:plot_model() successfully completed......................................
2023-06-09 11:55:51,868:INFO:Initializing evaluate_model()
2023-06-09 11:55:51,869:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-06-09 11:55:51,892:INFO:Initializing plot_model()
2023-06-09 11:55:51,892:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, system=True)
2023-06-09 11:55:51,892:INFO:Checking exceptions
2023-06-09 11:55:51,913:INFO:Preloading libraries
2023-06-09 11:55:51,921:INFO:Copying training dataset
2023-06-09 11:55:51,921:INFO:Plot type: pipeline
2023-06-09 11:55:51,987:INFO:Visual Rendered Successfully
2023-06-09 11:55:52,369:INFO:plot_model() successfully completed......................................
2023-06-09 11:55:54,017:INFO:Initializing plot_model()
2023-06-09 11:55:54,017:INFO:plot_model(plot=class_report, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, system=True)
2023-06-09 11:55:54,017:INFO:Checking exceptions
2023-06-09 11:55:54,036:INFO:Preloading libraries
2023-06-09 11:55:54,046:INFO:Copying training dataset
2023-06-09 11:55:54,046:INFO:Plot type: class_report
2023-06-09 11:55:54,319:INFO:Fitting Model
2023-06-09 11:55:54,319:WARNING:C:\Users\User\AppData\Roaming\Python\Python310\site-packages\sklearn\base.py:450: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2023-06-09 11:55:54,319:INFO:Scoring test/hold-out set
2023-06-09 11:55:54,623:INFO:Visual Rendered Successfully
2023-06-09 11:55:55,018:INFO:plot_model() successfully completed......................................
2023-06-09 11:56:48,090:INFO:Initializing finalize_model()
2023-06-09 11:56:48,090:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-06-09 11:56:48,091:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2023-06-09 11:56:48,095:INFO:Initializing create_model()
2023-06-09 11:56:48,095:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-06-09 11:56:48,095:INFO:Checking exceptions
2023-06-09 11:56:48,097:INFO:Importing libraries
2023-06-09 11:56:48,097:INFO:Copying training dataset
2023-06-09 11:56:48,097:INFO:Defining folds
2023-06-09 11:56:48,097:INFO:Declaring metric variables
2023-06-09 11:56:48,097:INFO:Importing untrained model
2023-06-09 11:56:48,097:INFO:Declaring custom model
2023-06-09 11:56:48,098:INFO:Extra Trees Classifier Imported successfully
2023-06-09 11:56:48,101:INFO:Cross validation set to False
2023-06-09 11:56:48,101:INFO:Fitting Model
2023-06-09 11:56:48,412:INFO:Pipeline(memory=FastMemory(location=C:\Users\User\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['0', '1', '2', '3', '4', '5', '6',
                                             '7', '8', '9', '10', '11', '12',
                                             '13', '14', '15', '16', '17', '18',
                                             '19', '20', '21', '22', '23', '24',
                                             '25', '26', '27', '28', '29', ...],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fil...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      n_estimators=100, n_jobs=-1,
                                      oob_score=False, random_state=123,
                                      verbose=0, warm_start=False))],
         verbose=False)
2023-06-09 11:56:48,412:INFO:create_model() successfully completed......................................
2023-06-09 11:56:48,805:INFO:_master_model_container: 17
2023-06-09 11:56:48,805:INFO:_display_container: 5
2023-06-09 11:56:48,814:INFO:Pipeline(memory=FastMemory(location=C:\Users\User\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['0', '1', '2', '3', '4', '5', '6',
                                             '7', '8', '9', '10', '11', '12',
                                             '13', '14', '15', '16', '17', '18',
                                             '19', '20', '21', '22', '23', '24',
                                             '25', '26', '27', '28', '29', ...],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fil...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      n_estimators=100, n_jobs=-1,
                                      oob_score=False, random_state=123,
                                      verbose=0, warm_start=False))],
         verbose=False)
2023-06-09 11:56:48,814:INFO:finalize_model() successfully completed......................................
2023-06-09 11:57:16,804:INFO:Initializing predict_model()
2023-06-09 11:57:16,804:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022A3E7DE350>, estimator=Pipeline(memory=FastMemory(location=C:\Users\User\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['0', '1', '2', '3', '4', '5', '6',
                                             '7', '8', '9', '10', '11', '12',
                                             '13', '14', '15', '16', '17', '18',
                                             '19', '20', '21', '22', '23', '24',
                                             '25', '26', '27', '28', '29', ...],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fil...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      n_estimators=100, n_jobs=-1,
                                      oob_score=False, random_state=123,
                                      verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000022A3F633130>)
2023-06-09 11:57:16,804:INFO:Checking exceptions
2023-06-09 11:57:16,805:INFO:Preloading libraries
2023-06-09 11:58:11,529:INFO:Initializing save_model()
2023-06-09 11:58:11,529:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\User\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['0', '1', '2', '3', '4', '5', '6',
                                             '7', '8', '9', '10', '11', '12',
                                             '13', '14', '15', '16', '17', '18',
                                             '19', '20', '21', '22', '23', '24',
                                             '25', '26', '27', '28', '29', ...],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fil...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      n_estimators=100, n_jobs=-1,
                                      oob_score=False, random_state=123,
                                      verbose=0, warm_start=False))],
         verbose=False), model_name=Final ET Model 9 june 2023, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\User\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['0', '1', '2', '3', '4', '5', '6',
                                             '7', '8', '9', '10', '11', '12',
                                             '13', '14', '15', '16', '17', '18',
                                             '19', '20', '21', '22', '23', '24',
                                             '25', '26', '27', '28', '29', ...],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-06-09 11:58:11,529:INFO:Adding model into prep_pipe
2023-06-09 11:58:11,529:WARNING:Only Model saved as it was a pipeline.
2023-06-09 11:58:11,606:INFO:Final ET Model 9 june 2023.pkl saved in current working directory
2023-06-09 11:58:11,615:INFO:Pipeline(memory=FastMemory(location=C:\Users\User\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['0', '1', '2', '3', '4', '5', '6',
                                             '7', '8', '9', '10', '11', '12',
                                             '13', '14', '15', '16', '17', '18',
                                             '19', '20', '21', '22', '23', '24',
                                             '25', '26', '27', '28', '29', ...],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fil...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      n_estimators=100, n_jobs=-1,
                                      oob_score=False, random_state=123,
                                      verbose=0, warm_start=False))],
         verbose=False)
2023-06-09 11:58:11,615:INFO:save_model() successfully completed......................................
2023-06-09 12:00:16,796:INFO:Initializing load_model()
2023-06-09 12:00:16,797:INFO:load_model(model_name=Final ET Model 9 june 2023, platform=None, authentication=None, verbose=True)
